<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信支付</title>
      <link href="/post/3ec27523.html"/>
      <url>/post/3ec27523.html</url>
      
        <content type="html"><![CDATA[<p>本文参考:<a href="https://www.bilibili.com/video/BV1US4y1D77m">【尚硅谷】微信支付&amp;支付宝支付，一套搞定Java在线支付开发教程</a></p><h2 id="1、微信支付产品介绍"><a href="#1、微信支付产品介绍" class="headerlink" title="1、微信支付产品介绍"></a>1、微信支付产品介绍</h2><h3 id="1-1、付款码支付"><a href="#1-1、付款码支付" class="headerlink" title="1.1、付款码支付"></a>1.1、付款码支付</h3><p>用户展示微信钱包内的“付款码”给商家，商家扫描后直接完成支付，适用于线下面对面收银的场景。</p><h3 id="1-2、JSAPI支付"><a href="#1-2、JSAPI支付" class="headerlink" title="1.2、JSAPI支付"></a>1.2、JSAPI支付</h3><ul><li>线下场所：商户展示一个支付二维码，用户使用微信扫描二维码后，输入需要支付的金额，完成支<br>付。</li><li>公众号场景：用户在微信内进入商家公众号，打开某个页面，选择某个产品，完成支付。</li><li>PC网站场景：在网站中展示二维码，用户使用微信扫描二维码，输入需要支付的金额，完成支<br>付。</li></ul><p>特点：用户在客户端输入支付金额。</p><h3 id="1-3、小程序支付"><a href="#1-3、小程序支付" class="headerlink" title="1.3、小程序支付"></a>1.3、小程序支付</h3><p>在微信小程序平台内实现支付的功能。</p><h3 id="1-4、Native支付"><a href="#1-4、Native支付" class="headerlink" title="1.4、Native支付"></a>1.4、Native支付</h3><p>Native支付是指商户展示支付二维码，用户再用微信“扫一扫”完成支付的模式。这种方式适用于PC网<br>站。</p><p>特点：商家预先指定支付金额。</p><h3 id="1-5、APP支付"><a href="#1-5、APP支付" class="headerlink" title="1.5、APP支付"></a>1.5、APP支付</h3><p>商户通过在移动端独立的APP应用程序中集成微信支付模块，完成支付。</p><h3 id="1-6、刷脸支付"><a href="#1-6、刷脸支付" class="headerlink" title="1.6、刷脸支付"></a>1.6、刷脸支付</h3><p>用户在刷脸设备前通过摄像头刷脸、识别身份后进行的一种支付方式。</p><h2 id="2、接入指引"><a href="#2、接入指引" class="headerlink" title="2、接入指引"></a>2、接入指引</h2><h3 id="2-1、获取商户号"><a href="#2-1、获取商户号" class="headerlink" title="2.1、获取商户号"></a>2.1、获取商户号</h3><p>微信商户平台：<a href="https://pay.weixin.qq.com/">https://pay.weixin.qq.com/</a></p><p>场景：Native支付</p><p>步骤：提交资料 =&gt; 签署协议 =&gt; 获取商户号</p><h3 id="2-2、获取APPID"><a href="#2-2、获取APPID" class="headerlink" title="2.2、获取APPID"></a>2.2、获取APPID</h3><p>微信公众平台：<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a><br>步骤：注册服务号 =&gt; 服务号认证 =&gt; 获取APPID =&gt; 绑定商户号</p><h3 id="2-3、获取API秘钥"><a href="#2-3、获取API秘钥" class="headerlink" title="2.3、获取API秘钥"></a>2.3、获取API秘钥</h3><p>APIv2版本的接口需要此秘钥<br>步骤：登录商户平台 =&gt; 选择 账户中心 =&gt; 安全中心 =&gt; API安全 =&gt; 设置API密钥</p><h3 id="2-4、获取APIv3秘钥"><a href="#2-4、获取APIv3秘钥" class="headerlink" title="2.4、获取APIv3秘钥"></a>2.4、获取APIv3秘钥</h3><p>APIv3版本的接口需要此秘钥<br>步骤：登录商户平台 =&gt; 选择 账户中心 =&gt; 安全中心 =&gt; API安全 =&gt; 设置APIv3密钥<br>随机密码生成工具：<a href="https://suijimimashengcheng.bmcx.com/">https://suijimimashengcheng.bmcx.com/</a></p><h3 id="2-5、申请商户API证书"><a href="#2-5、申请商户API证书" class="headerlink" title="2.5、申请商户API证书"></a>2.5、申请商户API证书</h3><p>APIv3版本的所有接口都需要；APIv2版本的高级接口需要（如：退款、企业红包、企业付款等）<br>步骤：登录商户平台 =&gt; 选择 账户中心 =&gt; 安全中心 =&gt; API安全 =&gt; 申请API证书</p><h3 id="2-6、获取微信平台证书"><a href="#2-6、获取微信平台证书" class="headerlink" title="2.6、获取微信平台证书"></a>2.6、获取微信平台证书</h3><p>可以预先下载，也可以通过编程的方式获取。</p><p><strong>注意：以上所有API秘钥和证书需妥善保管防止泄露</strong></p><h1 id="2、支付安全（证书-秘钥-签名）"><a href="#2、支付安全（证书-秘钥-签名）" class="headerlink" title="2、支付安全（证书/秘钥/签名）"></a>2、支付安全（证书/秘钥/签名）</h1><h2 id="1、信息安全的基础-机密性"><a href="#1、信息安全的基础-机密性" class="headerlink" title="1、信息安全的基础 - 机密性"></a>1、信息安全的基础 - 机密性</h2><ul><li><strong>明文</strong>：加密前的消息叫“明文”（plain text）</li><li><strong>密文</strong>：加密后的文本叫“密文”（cipher text）</li><li><strong>密钥</strong>：只有掌握特殊“钥匙”的人，才能对加密的文本进行解密，这里的“钥匙”就叫做“密钥”（key）</li></ul><blockquote><p>“密钥”就是一个字符串，度量单位是“位”（bit），比如，密钥长度是 128，就是 16 字节的二<br>进制串</p></blockquote><ul><li><strong>加密</strong>：实现机密性最常用的手段是“加密”（encrypt）</li></ul><blockquote><p>按照密钥的使用方式，加密可以分为两大类：对称加密和非对称加密。</p></blockquote><ul><li><strong>解密</strong>：使用密钥还原明文的过程叫“解密”（decrypt）</li><li><strong>加密算法</strong>：加密解密的操作过程就是“加密算法”</li></ul><blockquote><p>所有的加密算法都是公开的，而算法使用的“密钥”则必须保密</p></blockquote><h2 id="2、对称加密和非对称加密"><a href="#2、对称加密和非对称加密" class="headerlink" title="2、对称加密和非对称加密"></a>2、对称加密和非对称加密</h2><ul><li><strong>对称加密</strong><ul><li>特点：只使用一个密钥，密钥必须保密，常用的有 AES算法</li><li>优点：运算速度快</li><li>缺点：秘钥需要信息交换的双方共享，一旦被窃取，消息会被破解，无法做到安全的密钥交<br>换</li></ul></li><li><strong>非对称加密</strong><ul><li>特点：使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，常用的有 RSA</li><li>优点：黑客获取公钥无法破解密文，解决了密钥交换的问题</li><li>缺点：运算速度非常慢</li></ul></li><li><strong>混合加密</strong><ul><li>实际场景中把对称加密和非对称加密结合起来使用</li></ul></li></ul><h2 id="3、身份认证"><a href="#3、身份认证" class="headerlink" title="3、身份认证"></a>3、身份认证</h2><ul><li>公钥加密，私钥解密的作用是加密信息</li><li>私钥加密，公钥解密的作用是身份认证</li></ul><h2 id="4、摘要算法（Digest-Algorithm）"><a href="#4、摘要算法（Digest-Algorithm）" class="headerlink" title="4、摘要算法（Digest Algorithm）"></a>4、摘要算法（Digest Algorithm）</h2><p>摘要算法就是我们常说的散列函数、哈希函数（Hash Function），它能够把任意长度的数据“压缩”成<br>固定长度、而且独一无二的“摘要”字符串，就好像是给这段数据生成了一个数字“指纹”。</p><p><strong>作用：</strong></p><ul><li>保证信息的完整性</li></ul><p><strong>特性：</strong></p><ul><li>不可逆：只有算法，没有秘钥，只能加密，不能解密</li><li>难题友好性：想要破解，只能暴力枚举</li><li>发散性：只要对原文进行一点点改动，摘要就会发生剧烈变化</li><li>抗碰撞性：原文不同，计算后的摘要也要不同</li></ul><p><strong>常见摘要算法：</strong></p><ul><li>MD5、SHA1、SHA2（SHA224、SHA256、SHA384）</li></ul><h2 id="5、数字签名"><a href="#5、数字签名" class="headerlink" title="5、数字签名"></a>5、数字签名</h2><p>数字签名是使用私钥对摘要加密生成签名，需要由公钥将签名解密后进行验证，实现身份认证和不可否<br>认</p><p><strong>签名和验证签名的流程：</strong></p><p><img src="https://images.hckun.cn/image-20220719222035608.png" alt="image-20220719222035608"></p><h2 id="6、数字证书"><a href="#6、数字证书" class="headerlink" title="6、数字证书"></a>6、数字证书</h2><p>数字证书解决“公钥的信任”问题，可以防止黑客伪造公钥。<br>不能直接分发公钥，公钥的分发必须使用数字证书，数字证书由CA颁发</p><p><strong>https协议中的数字证书：</strong></p><p><img src="https://images.hckun.cn/image-20220719222157719.png" alt="image-20220719222157719"></p><h2 id="7、微信APIv3证书"><a href="#7、微信APIv3证书" class="headerlink" title="7、微信APIv3证书"></a>7、微信APIv3证书</h2><p><strong>商户证书：</strong></p><p>商户API证书是指由商户申请的，包含商户的商户号、公司名称、公钥信息的证书。<br>商户证书在商户后台申请：<a href="https://pay.weixin.qq.com/index.php/core/cert/api_cert#/">https://pay.weixin.qq.com/index.php/core/cert/api_cert#/</a></p><p><img src="https://images.hckun.cn/image-20220719222259333.png" alt="image-20220719222259333"></p><p><strong>平台证书（微信支付平台）：</strong></p><p>微信支付平台证书是指由微信支付 负责申请的，包含微信支付平台标识、公钥信息的证书。商户可以使<br>用平台证书中的公钥进行验签。<br>平台证书的获取：<a href="https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay3_0.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay3_0.shtml</a></p><p><img src="https://images.hckun.cn/image-20220719222340659.png" alt="image-20220719222340659"></p><h2 id="8、API密钥和APIv3密钥"><a href="#8、API密钥和APIv3密钥" class="headerlink" title="8、API密钥和APIv3密钥"></a>8、API密钥和APIv3密钥</h2><p>都是对称加密需要使用的加密和解密密钥，一定要保管好，不能泄露。<br>API密钥对应V2版本的API<br>APIv3密钥对应V3版本的API</p><h1 id="3、案例项目创建"><a href="#3、案例项目创建" class="headerlink" title="3、案例项目创建"></a>3、案例项目创建</h1><h2 id="1、创建SpringBoot项目"><a href="#1、创建SpringBoot项目" class="headerlink" title="1、创建SpringBoot项目"></a>1、创建SpringBoot项目</h2><h3 id="1-1、使用IDEA快速创建一个SpringBoot-web项目"><a href="#1-1、使用IDEA快速创建一个SpringBoot-web项目" class="headerlink" title="1.1、使用IDEA快速创建一个SpringBoot-web项目"></a>1.1、使用IDEA快速创建一个SpringBoot-web项目</h3><h3 id="1-2、引入依赖"><a href="#1-2、引入依赖" class="headerlink" title="1.2、引入依赖"></a>1.2、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3、修改配置文件"><a href="#1-3、修改配置文件" class="headerlink" title="1.3、修改配置文件"></a>1.3、修改配置文件</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用名称</span></span><br><span class="line"><span class="attr">spring</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">application</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">pay</span></span><br><span class="line"><span class="comment"># 应用服务 WEB 访问端口</span></span><br><span class="line"><span class="attr">server</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">port</span>: <span class="string">8080</span></span><br></pre></td></tr></table></figure><h3 id="1-4、创建测试Controller"><a href="#1-4、创建测试Controller" class="headerlink" title="1.4、创建测试Controller"></a>1.4、创建测试Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5、测试"><a href="#1-5、测试" class="headerlink" title="1.5、测试"></a>1.5、测试</h3><p>访问:<a href="http://localhost:8080/test/hello">http://localhost:8080/test/hello</a></p><h2 id="2、引入Swagger"><a href="#2、引入Swagger" class="headerlink" title="2、引入Swagger"></a>2、引入Swagger</h2><p>作用：自动生成接口文档和测试页面。</p><h3 id="2-1、引入依赖"><a href="#2-1、引入依赖" class="headerlink" title="2.1、引入依赖"></a>2.1、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2、Swagger配置文件"><a href="#2-2、Swagger配置文件" class="headerlink" title="2.2、Swagger配置文件"></a>2.2、Swagger配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Swagger2Config</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">docket</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(<span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>().title(<span class="string">&quot;微信支付案例接口文档&quot;</span>).build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3、Swagger注解"><a href="#2-3、Swagger注解" class="headerlink" title="2.3、Swagger注解"></a>2.3、Swagger注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api(tags=&quot;商品管理&quot;)</span> <span class="comment">//用在类上</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiOperation(&quot;测试接口&quot;)</span> <span class="comment">//用在方法上</span></span><br></pre></td></tr></table></figure><h3 id="2-4、测试"><a href="#2-4、测试" class="headerlink" title="2.4、测试"></a>2.4、测试</h3><p>访问：<a href="http://localhost:8080/swagger-ui.html">http://localhost:8080/swagger-ui.html</a></p><p><img src="https://images.hckun.cn/image-20220719225526602.png" alt="image-20220719225526602"></p><h2 id="3、定义统一结果"><a href="#3、定义统一结果" class="headerlink" title="3、定义统一结果"></a>3、定义统一结果</h2><p>作用：定义统一响应结果，为前端返回标准格式的数据。</p><h3 id="3-1、引入lombok依赖"><a href="#3-1、引入lombok依赖" class="headerlink" title="3.1、引入lombok依赖"></a>3.1、引入lombok依赖</h3><p>简化实体类的开发</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2、创建R类"><a href="#3-2、创建R类" class="headerlink" title="3.2、创建R类"></a>3.2、创建R类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">ok</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.setCode(<span class="number">0</span>);</span><br><span class="line">        r.setMsg(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> R <span class="title function_">error</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.setCode(<span class="number">500</span>);</span><br><span class="line">        r.setMsg(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">data</span><span class="params">(String key, Object value)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.data.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3、修改原测试Controller"><a href="#3-3、修改原测试Controller" class="headerlink" title="3.3、修改原测试Controller"></a>3.3、修改原测试Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;测试类&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;测试方法&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">                .data(<span class="string">&quot;timme&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4、使用Swaagger测试"><a href="#3-4、使用Swaagger测试" class="headerlink" title="3.4、使用Swaagger测试"></a>3.4、使用Swaagger测试</h3><h3 id="3-5、配置JSON时间格式"><a href="#3-5、配置JSON时间格式" class="headerlink" title="3.5、配置JSON时间格式"></a>3.5、配置JSON时间格式</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring</span>:<span class="string"></span></span><br><span class="line"><span class="comment">    # 配置JSON时间格式</span></span><br><span class="line">  <span class="attr">jackson</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">date-format</span>: <span class="string">yyyy-MM-dd HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone</span>: <span class="string">GMT+8</span></span><br></pre></td></tr></table></figure><h2 id="4、创建数据库"><a href="#4、创建数据库" class="headerlink" title="4、创建数据库"></a>4、创建数据库</h2><p>创建数据库、执行sql文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">USE `payment_demo`;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `t_order_info` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_order_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单标题&#x27;</span>,</span><br><span class="line">  `order_no` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商户订单编号&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `product_id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付产品id&#x27;</span>,</span><br><span class="line">  `total_fee` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单金额(分)&#x27;</span>,</span><br><span class="line">  `code_url` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单二维码连接&#x27;</span>,</span><br><span class="line">  `order_status` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `t_payment_info` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_payment_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;支付记录id&#x27;</span>,</span><br><span class="line">  `order_no` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商户订单编号&#x27;</span>,</span><br><span class="line">  `transaction_id` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付系统交易编号&#x27;</span>,</span><br><span class="line">  `payment_type` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付类型&#x27;</span>,</span><br><span class="line">  `trade_type` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易类型&#x27;</span>,</span><br><span class="line">  `trade_state` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易状态&#x27;</span>,</span><br><span class="line">  `payer_total` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付金额(分)&#x27;</span>,</span><br><span class="line">  `content` text COMMENT <span class="string">&#x27;通知参数&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `t_product` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_product` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;商品id&#x27;</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">  `price` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;价格（分）&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `t_product` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `t_product`(`title`,`price`) <span class="keyword">values</span> (<span class="string">&#x27;Java课程&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `t_product`(`title`,`price`) <span class="keyword">values</span> (<span class="string">&#x27;大数据课程&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `t_product`(`title`,`price`) <span class="keyword">values</span> (<span class="string">&#x27;前端课程&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">insert</span>  <span class="keyword">into</span> `t_product`(`title`,`price`) <span class="keyword">values</span> (<span class="string">&#x27;UI课程&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `t_refund_info` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t_refund_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;退款单id&#x27;</span>,</span><br><span class="line">  `order_no` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商户订单编号&#x27;</span>,</span><br><span class="line">  `refund_no` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商户退款单编号&#x27;</span>,</span><br><span class="line">  `refund_id` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付系统退款单号&#x27;</span>,</span><br><span class="line">  `total_fee` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;原订单金额(分)&#x27;</span>,</span><br><span class="line">  `refund` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;退款金额(分)&#x27;</span>,</span><br><span class="line">  `reason` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;退款原因&#x27;</span>,</span><br><span class="line">  `refund_status` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;退款状态&#x27;</span>,</span><br><span class="line">  `content_return` text COMMENT <span class="string">&#x27;申请退款返回参数&#x27;</span>,</span><br><span class="line">  `content_notify` text COMMENT <span class="string">&#x27;退款结果通知参数&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5、集成Mybatis-Plus"><a href="#5、集成Mybatis-Plus" class="headerlink" title="5、集成Mybatis-Plus"></a>5、集成Mybatis-Plus</h2><h3 id="5-1、引入依赖"><a href="#5-1、引入依赖" class="headerlink" title="5.1、引入依赖"></a>5.1、引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--持久层--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2、配置数据库连接"><a href="#5-2、配置数据库连接" class="headerlink" title="5.2、配置数据库连接"></a>5.2、配置数据库连接</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">datasource</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">driver-class-name</span>: <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">jdbc:mysql://localhost:3306/par_demo?useSSL=false&amp;serverTimezone=GMT%2B8&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username</span>: <span class="string">root</span></span><br><span class="line">    <span class="attr">password</span>: <span class="string">123456</span></span><br></pre></td></tr></table></figure><h3 id="5-3、定义实体类"><a href="#5-3、定义实体类" class="headerlink" title="5.3、定义实体类"></a>5.3、定义实体类</h3><p><strong>BaseEntity：</strong>BaseEntity为父类其他实体类需继承BaseEntity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseEntity</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义主键策略：跟随数据库的主键自增</span></span><br><span class="line">    <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> String id; <span class="comment">//主键</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;<span class="comment">//创建时间</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;<span class="comment">//更新时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>OrderInfo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_order_info&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderInfo</span>  <span class="keyword">extends</span> <span class="title class_">BaseEntity</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title;<span class="comment">//订单标题</span></span><br><span class="line">    <span class="keyword">private</span> String orderNo;<span class="comment">//商户订单编号</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;<span class="comment">//用户id</span></span><br><span class="line">    <span class="keyword">private</span> Long productId;<span class="comment">//支付产品id</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalFee;<span class="comment">//订单金额(分)</span></span><br><span class="line">    <span class="keyword">private</span> String codeUrl;<span class="comment">//订单二维码连接</span></span><br><span class="line">    <span class="keyword">private</span> String orderStatus;<span class="comment">//订单状态</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>PaymentInfo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_payment_info&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentInfo</span> <span class="keyword">extends</span> <span class="title class_">BaseEntity</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String orderNo;<span class="comment">//商品订单编号</span></span><br><span class="line">    <span class="keyword">private</span> String transactionId;<span class="comment">//支付系统交易编号</span></span><br><span class="line">    <span class="keyword">private</span> String paymentType;<span class="comment">//支付类型</span></span><br><span class="line">    <span class="keyword">private</span> String tradeType;<span class="comment">//交易类型</span></span><br><span class="line">    <span class="keyword">private</span> String tradeState;<span class="comment">//交易状态</span></span><br><span class="line">    <span class="keyword">private</span> Integer payerTotal;<span class="comment">//支付金额(分)</span></span><br><span class="line">    <span class="keyword">private</span> String content;<span class="comment">//通知参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Product</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> <span class="keyword">extends</span> <span class="title class_">BaseEntity</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String title; <span class="comment">//商品名称</span></span><br><span class="line">    <span class="keyword">private</span> Integer price; <span class="comment">//价格（分）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>RefundInfo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_refund_info&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefundInfo</span> <span class="keyword">extends</span> <span class="title class_">BaseEntity</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String orderNo;<span class="comment">//商品订单编号</span></span><br><span class="line">    <span class="keyword">private</span> String refundNo;<span class="comment">//退款单编号</span></span><br><span class="line">    <span class="keyword">private</span> String refundId;<span class="comment">//支付系统退款单号</span></span><br><span class="line">    <span class="keyword">private</span> Integer totalFee;<span class="comment">//原订单金额(分)</span></span><br><span class="line">    <span class="keyword">private</span> Integer refund;<span class="comment">//退款金额(分)</span></span><br><span class="line">    <span class="keyword">private</span> String reason;<span class="comment">//退款原因</span></span><br><span class="line">    <span class="keyword">private</span> String refundStatus;<span class="comment">//退款单状态</span></span><br><span class="line">    <span class="keyword">private</span> String contentReturn;<span class="comment">//申请退款返回参数</span></span><br><span class="line">    <span class="keyword">private</span> String contentNotify;<span class="comment">//退款结果通知参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-4、定义持久层"><a href="#5-4、定义持久层" class="headerlink" title="5.4、定义持久层"></a>5.4、定义持久层</h3><p>定义Mapper接口继承 BaseMapper&lt;&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderInfoMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;OrderInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PaymentInfoMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;PaymentInfo&gt; &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Product&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RefundInfoMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;RefundInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.pay.mapper.OrderInfoMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.pay.mapper.PaymentInfoMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.pay.mapper.ProductMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.pay.mapper.RefundInfoMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-5、定义MyBatis-Plus的配置文件"><a href="#5-5、定义MyBatis-Plus的配置文件" class="headerlink" title="5.5、定义MyBatis-Plus的配置文件"></a>5.5、定义MyBatis-Plus的配置文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.example.pay.mapper&quot;)</span><span class="comment">//持久层扫描</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span> <span class="comment">//启用事务管理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-6、定义yml配置文件"><a href="#5-6、定义yml配置文件" class="headerlink" title="5.6、定义yml配置文件"></a>5.6、定义yml配置文件</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">configuration</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">log-impl</span>: <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl #sql日志</span></span><br><span class="line">  <span class="attr">mapper-locations</span>: <span class="string">classpath:com/example/pay/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure><h3 id="5-7、定义业务层"><a href="#5-7、定义业务层" class="headerlink" title="5.7、定义业务层"></a>5.7、定义业务层</h3><p>定义业务层接口继承 IService&lt;&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderInfoService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;OrderInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PaymentInfoService</span>  <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;PaymentInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ProductService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Product&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RefundInfoService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;RefundInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义业务层接口的实现类，并继承 ServiceImpl&lt;,&gt;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;OrderInfoMapper, OrderInfo&gt; <span class="keyword">implements</span> <span class="title class_">OrderInfoService</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;PaymentInfoMapper, PaymentInfo&gt; <span class="keyword">implements</span> <span class="title class_">PaymentInfoService</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt; <span class="keyword">implements</span> <span class="title class_">ProductService</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefundInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;RefundInfoMapper, RefundInfo&gt; <span class="keyword">implements</span> <span class="title class_">RefundInfoService</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-8、定义接口方法查询所有商品"><a href="#5-8、定义接口方法查询所有商品" class="headerlink" title="5.8、定义接口方法查询所有商品"></a>5.8、定义接口方法查询所有商品</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;商品管理&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/product&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;查询所有商品&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;listProduct&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">listProduct</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Product&gt; products = productService.list();</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">&quot;rows&quot;</span>, products);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-9、pom中配置build节点"><a href="#5-9、pom中配置build节点" class="headerlink" title="5.9、pom中配置build节点"></a>5.9、pom中配置build节点</h3><p>maven工程在默认情况下 src/main/java 目录下的所有资源文件是不发布到 target 目录下的，我们<br>在 pom 文件的 节点下配置一个资源发布过滤器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 项目打包时会将java目录中的*.xml文件也进行打包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java&lt;/direct</span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6、搭建前端环境"><a href="#6、搭建前端环境" class="headerlink" title="6、搭建前端环境"></a>6、搭建前端环境</h2><p>直接使用前端工具运行提供的项目</p><p><img src="upload%5Cimage-20220720221239747.png" alt="image-20220720221239747"></p><h1 id="4、基础支付API-V3"><a href="#4、基础支付API-V3" class="headerlink" title="4、基础支付API V3"></a>4、基础支付API V3</h1><h2 id="1、引入支付参数"><a href="#1、引入支付参数" class="headerlink" title="1、引入支付参数"></a>1、引入支付参数</h2><h3 id="1-1、定义微信支付相关参数"><a href="#1-1、定义微信支付相关参数" class="headerlink" title="1.1、定义微信支付相关参数"></a>1.1、定义微信支付相关参数</h3><p>在resources文件夹中创建wxpay.properties文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 微信支付相关参数</span></span><br><span class="line"><span class="comment"># 商户号</span></span><br><span class="line"><span class="attr">wxpay.mch-id</span>=<span class="string">1558950191</span></span><br><span class="line"><span class="comment"># 商户API证书序列号</span></span><br><span class="line"><span class="attr">wxpay.mch-serial-no</span>=<span class="string">34345964330B66427E0D3D28826C4993C77E631F</span></span><br><span class="line"><span class="comment"># 商户私钥文件</span></span><br><span class="line"><span class="attr">wxpay.private-key-path</span>=<span class="string">classpath:apiclient_key.pem</span></span><br><span class="line"><span class="comment"># APIv3密钥</span></span><br><span class="line"><span class="attr">wxpay.api-v3-key</span>=<span class="string">UDuLFDcmy5Eb6o0nTNZdu6ek4DDh4K8B</span></span><br><span class="line"><span class="comment"># APPID</span></span><br><span class="line"><span class="attr">wxpay.appid</span>=<span class="string">wx74862e0dfcf69954</span></span><br><span class="line"><span class="comment"># 微信服务器地址</span></span><br><span class="line"><span class="attr">wxpay.domain</span>=<span class="string">https://api.mch.weixin.qq.com</span></span><br><span class="line"><span class="comment"># 接收结果通知地址</span></span><br><span class="line"><span class="comment"># 注意：每次重新启动ngrok，都需要根据实际情况修改这个配置</span></span><br><span class="line"><span class="attr">wxpay.notify-domain</span>=<span class="string">https://500c-219-143-130-12.ngrok.io</span></span><br></pre></td></tr></table></figure><h3 id="1-2、读取支付参数"><a href="#1-2、读取支付参数" class="headerlink" title="1.2、读取支付参数"></a>1.2、读取支付参数</h3><p>使用WxPayConfig.java读取wxpay.properties文件中的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource(&quot;classpath:wxpay.properties&quot;)</span> <span class="comment">//读取配置文件</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;wxpay&quot;)</span> <span class="comment">//读取wxpay节点</span></span><br><span class="line"><span class="meta">@Data</span> <span class="comment">//使用set方法将wxpay节点中的值填充到当前类的属性中</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxPayConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商户号</span></span><br><span class="line">    <span class="keyword">private</span> String mchId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商户API证书序列号</span></span><br><span class="line">    <span class="keyword">private</span> String mchSerialNo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商户私钥文件</span></span><br><span class="line">    <span class="keyword">private</span> String privateKeyPath;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// APIv3密钥</span></span><br><span class="line">    <span class="keyword">private</span> String apiV3Key;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// APPID</span></span><br><span class="line">    <span class="keyword">private</span> String appid;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 微信服务器地址</span></span><br><span class="line">    <span class="keyword">private</span> String domain;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 接收结果通知地址</span></span><br><span class="line">    <span class="keyword">private</span> String notifyDomain;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3、测试支付参数的获取"><a href="#1-3、测试支付参数的获取" class="headerlink" title="1.3、测试支付参数的获取"></a>1.3、测试支付参数的获取</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;测试类&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxPayConfig wxPayConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getPayConfig&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">getPayConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">&quot;appid&quot;</span>,wxPayConfig.getAppid());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4、配置-Annotation-Processor"><a href="#1-4、配置-Annotation-Processor" class="headerlink" title="1.4、配置 Annotation Processor"></a>1.4、配置 Annotation Processor</h3><p>可以帮助我们生成自定义配置的元数据信息，让配置文件和Java代码之间的对应参数可以自动定位，方<br>便开发</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、加载商户私钥"><a href="#2、加载商户私钥" class="headerlink" title="2、加载商户私钥"></a>2、加载商户私钥</h2><h3 id="2-1、复制商户私钥"><a href="#2-1、复制商户私钥" class="headerlink" title="2.1、复制商户私钥"></a>2.1、复制商户私钥</h3><p>将apiclient_key.pem私钥文件复制到resources文件夹下</p><h3 id="2-2、引入SDK"><a href="#2-2、引入SDK" class="headerlink" title="2.2、引入SDK"></a>2.2、引入SDK</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay6_0.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay6_0.shtml</a><br>我们可以使用官方提供的 SDK，帮助我们完成开发。实现了请求签名的生成和应答签名的验证。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.wechatpay-apiv3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wechatpay-apache-httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.4.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3、获取商户私钥"><a href="#2-3、获取商户私钥" class="headerlink" title="2.3、获取商户私钥"></a>2.3、获取商户私钥</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> PrivateKey <span class="title function_">getPrivateKey</span><span class="params">(String path)</span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> PemUtil.loadPrivateKey(</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(ResourceUtils.getFile(path)));</span><br><span class="line">       &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="2-4、测试商户私钥的获取"><a href="#2-4、测试商户私钥的获取" class="headerlink" title="2.4、测试商户私钥的获取"></a>2.4、测试商户私钥的获取</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PayApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxPayConfig wxPayConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">privateKeyPath</span> <span class="operator">=</span> wxPayConfig.getPrivateKeyPath();</span><br><span class="line">        <span class="type">PrivateKey</span> <span class="variable">privateKey</span> <span class="operator">=</span> wxPayConfig.getPrivateKey(privateKeyPath);</span><br><span class="line">        System.out.println(privateKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、获取签名验证器和HttpClient"><a href="#3、获取签名验证器和HttpClient" class="headerlink" title="3、获取签名验证器和HttpClient"></a>3、获取签名验证器和HttpClient</h2><h3 id="3-1、证书密钥使用说明"><a href="#3-1、证书密钥使用说明" class="headerlink" title="3.1、证书密钥使用说明"></a>3.1、证书密钥使用说明</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3_partner/wechatpay/wechatpay3_0.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3_partner/wechatpay/wechatpay3_0.shtml</a></p><p><img src="https://pay.weixin.qq.com/wiki/doc/apiv3/assets/img/common/ico-guide/chapter1_5_1.png" alt="img"></p><h3 id="3-2、获取签名验证器"><a href="#3-2、获取签名验证器" class="headerlink" title="3.2、获取签名验证器"></a>3.2、获取签名验证器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Verifier <span class="title function_">getVerifier</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取证书管理器实例</span></span><br><span class="line">            <span class="type">CertificatesManager</span> <span class="variable">certificatesManager</span> <span class="operator">=</span> CertificatesManager.getInstance();</span><br><span class="line">            <span class="comment">// 向证书管理器增加需要自动更新平台证书的商户信息</span></span><br><span class="line">            certificatesManager.putMerchant(mchId, <span class="keyword">new</span> <span class="title class_">WechatPay2Credentials</span>(mchId,</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">PrivateKeySigner</span>(mchSerialNo, getPrivateKey(privateKeyPath))), apiV3Key.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            <span class="comment">// 从证书管理器中获取verifier</span></span><br><span class="line">            <span class="keyword">return</span> certificatesManager.getVerifier(mchId);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-3、获取-HttpClient-对象"><a href="#3-3、获取-HttpClient-对象" class="headerlink" title="3.3、获取 HttpClient 对象"></a>3.3、获取 HttpClient 对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> CloseableHttpClient <span class="title function_">getHttpClient</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">WechatPayHttpClientBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> WechatPayHttpClientBuilder.create()</span><br><span class="line">               .withMerchant(mchId, mchSerialNo, getPrivateKey(privateKeyPath))</span><br><span class="line">               .withValidator(<span class="keyword">new</span> <span class="title class_">WechatPay2Validator</span>(getVerifier()));</span><br><span class="line">       <span class="comment">// 通过WechatPayHttpClientBuilder构造的HttpClient，会自动的处理签名和验签，并进行证书自动更新</span></span><br><span class="line">       <span class="keyword">return</span> builder.build();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="4、Native下单API"><a href="#4、Native下单API" class="headerlink" title="4、Native下单API"></a>4、Native下单API</h2><h3 id="4-1、Native支付流程"><a href="#4-1、Native支付流程" class="headerlink" title="4.1、Native支付流程"></a>4.1、Native支付流程</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_4.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_4.shtml</a></p><p><img src="https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/assets/img/common/pay/chapter3_1_2.png" alt="img"></p><h3 id="4-2、Native下单API"><a href="#4-2、Native下单API" class="headerlink" title="4.2、Native下单API"></a>4.2、Native下单API</h3><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_1.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_1.shtml</a></p><p>商户端发起支付请求，微信端创建支付订单并生成支付二维码链接，微信端将支付二维码返回给商户<br>端，商户端显示支付二维码，用户使用微信客户端扫码后发起支付</p><h4 id="4-2-1、添加所需工具类"><a href="#4-2-1、添加所需工具类" class="headerlink" title="4.2.1、添加所需工具类"></a>4.2.1、添加所需工具类</h4><p>订单状态、微信支付状态、微信API地址枚举类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">OrderStatus</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 未支付</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    NOTPAY(<span class="string">&quot;未支付&quot;</span>),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 支付成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    SUCCESS(<span class="string">&quot;支付成功&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已关闭</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CLOSED(<span class="string">&quot;超时已关闭&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已取消</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    CANCEL(<span class="string">&quot;用户已取消&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退款中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    REFUND_PROCESSING(<span class="string">&quot;退款中&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已退款</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    REFUND_SUCCESS(<span class="string">&quot;已退款&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退款异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    REFUND_ABNORMAL(<span class="string">&quot;退款异常&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">WxApiType</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Native下单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">NATIVE_PAY(<span class="string">&quot;/v3/pay/transactions/native&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Native下单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">NATIVE_PAY_V2(<span class="string">&quot;/pay/unifiedorder&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询订单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ORDER_QUERY_BY_NO(<span class="string">&quot;/v3/pay/transactions/out-trade-no/%s&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭订单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">CLOSE_ORDER_BY_NO(<span class="string">&quot;/v3/pay/transactions/out-trade-no/%s/close&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 申请退款</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">DOMESTIC_REFUNDS(<span class="string">&quot;/v3/refund/domestic/refunds&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询单笔退款</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">DOMESTIC_REFUNDS_QUERY(<span class="string">&quot;/v3/refund/domestic/refunds/%s&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 申请交易账单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">TRADE_BILLS(<span class="string">&quot;/v3/bill/tradebill&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 申请资金账单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">FUND_FLOW_BILLS(<span class="string">&quot;/v3/bill/fundflowbill&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">WxNotifyType</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 支付通知</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">NATIVE_NOTIFY(<span class="string">&quot;/api/wx-pay/native/notify&quot;</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 支付通知</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">NATIVE_NOTIFY_V2(<span class="string">&quot;/api/wx-pay-v2/native/notify&quot;</span>),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 退款结果通知</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">REFUND_NOTIFY(<span class="string">&quot;/api/wx-pay/refunds/notify&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>订单编号生成工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderNoUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取订单编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getOrderNo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ORDER_&quot;</span> + getNo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取退款单编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRefundNo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;REFUND_&quot;</span> + getNo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getNo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMddHHmmss&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newDate</span> <span class="operator">=</span> sdf.format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            result += random.nextInt(<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newDate + result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-2、创建WxPayController"><a href="#5-2-2、创建WxPayController" class="headerlink" title="5.2.2、创建WxPayController"></a>5.2.2、创建WxPayController</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;微信支付相关接口&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/wxpay&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxPayController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxPayService wxPayService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;调用native支付接口,获取支付二维码&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/native/&#123;productId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">nativePay</span><span class="params">(<span class="meta">@PathVariable</span> Long productId)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            log.info(<span class="string">&quot;获取支付二维码&quot;</span>);</span><br><span class="line">            Map&lt;String, Object&gt; map = wxPayService.nativePay(productId);</span><br><span class="line">            <span class="keyword">return</span> R.ok().data(<span class="string">&quot;data&quot;</span>, map);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-2、创建WxPayService"><a href="#5-2-2、创建WxPayService" class="headerlink" title="5.2.2、创建WxPayService"></a>5.2.2、创建WxPayService</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">WxPayService</span> &#123;</span><br><span class="line"></span><br><span class="line">    Map&lt;String,Object&gt; <span class="title function_">nativePay</span><span class="params">(Long productId)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-3、创建WxPayServiceIpl"><a href="#5-2-3、创建WxPayServiceIpl" class="headerlink" title="5.2.3、创建WxPayServiceIpl"></a>5.2.3、创建WxPayServiceIpl</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxPayServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">WxPayService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxPayConfig wxPayConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">nativePay</span><span class="params">(Long productId)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//生成订单</span></span><br><span class="line">        <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderInfo</span>();</span><br><span class="line">        orderInfo.setProductId(productId);</span><br><span class="line">        <span class="comment">//订单号,使用工具类获取</span></span><br><span class="line">        orderInfo.setOrderNo(OrderNoUtils.getOrderNo());</span><br><span class="line">        <span class="comment">//订单状态,订单枚举类获取</span></span><br><span class="line">        orderInfo.setOrderStatus(OrderStatus.NOTPAY.getType());</span><br><span class="line">        orderInfo.setTitle(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        <span class="comment">//订单金额,分</span></span><br><span class="line">        orderInfo.setTotalFee(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用native下单接口</span></span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(wxPayConfig.getDomain().concat(WxApiType.NATIVE_PAY.getType()));</span><br><span class="line">        <span class="comment">// 请求body参数</span></span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;appid&quot;</span>, wxPayConfig.getAppid());</span><br><span class="line">        params.put(<span class="string">&quot;mchid&quot;</span>, wxPayConfig.getMchId());</span><br><span class="line">        params.put(<span class="string">&quot;description&quot;</span>, orderInfo.getTitle());</span><br><span class="line">        params.put(<span class="string">&quot;out_trade_no&quot;</span>, orderInfo.getOrderNo());</span><br><span class="line">        params.put(<span class="string">&quot;notify_url&quot;</span>, wxPayConfig.getNotifyDomain().concat(WxNotifyType.NATIVE_NOTIFY.getType()));</span><br><span class="line">        <span class="comment">//订单金额</span></span><br><span class="line">        Map&lt;String, Object&gt; amountMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        amountMap.put(<span class="string">&quot;total&quot;</span>, orderInfo.getTotalFee());</span><br><span class="line">        amountMap.put(<span class="string">&quot;currency&quot;</span>, <span class="string">&quot;CNY&quot;</span>);</span><br><span class="line">        params.put(<span class="string">&quot;amount&quot;</span>, amountMap);</span><br><span class="line"></span><br><span class="line">        <span class="type">StringEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(JSONObject.toJSONString(params), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        entity.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        httpPost.setEntity(entity);</span><br><span class="line">        httpPost.setHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//完成签名并执行请求</span></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> wxPayConfig.getHttpClient().execute(httpPost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//响应状态码</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> response.getStatusLine().getStatusCode();</span><br><span class="line">        <span class="comment">//响应结果</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">        <span class="type">Object</span> <span class="variable">codeUrl</span> <span class="operator">=</span> JSONObject.parseObject(result).get(<span class="string">&quot;code_url&quot;</span>);</span><br><span class="line">        Map&lt;String, Object&gt; resultMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        resultMap.put(<span class="string">&quot;orderNo&quot;</span>, orderInfo.getOrderNo());</span><br><span class="line">        resultMap.put(<span class="string">&quot;codeUrl&quot;</span>, codeUrl);</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-4、测试效果"><a href="#5-2-4、测试效果" class="headerlink" title="5.2.4、测试效果"></a>5.2.4、测试效果</h4><p><img src="https://images.hckun.cn/image-20220730112448445.png" alt="image-20220730112448445"></p><p><img src="https://images.hckun.cn/image-20220730112503826.png" alt="image-20220730112503826"></p><p><img src="https://images.hckun.cn/image-20220730112542659.png" alt="image-20220730112542659"></p><h3 id="4-3、创建课程订单"><a href="#4-3、创建课程订单" class="headerlink" title="4.3、创建课程订单"></a>4.3、创建课程订单</h3><h4 id="4-3-1、保存订单"><a href="#4-3-1、保存订单" class="headerlink" title="4.3.1、保存订单"></a>4.3.1、保存订单</h4><p>将5.2中生成的订单信息存储数据库</p><p>OrderInfoService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderInfoService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;OrderInfo&gt; &#123;</span><br><span class="line"></span><br><span class="line">   OrderInfo <span class="title function_">saveOrderInfo</span><span class="params">(Long productId)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OrderInfoServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;OrderInfoMapper, OrderInfo&gt; <span class="keyword">implements</span> <span class="title class_">OrderInfoService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> OrderInfo <span class="title function_">saveOrderInfo</span><span class="params">(Long productId)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查找存在且未支付的订单</span></span><br><span class="line">        <span class="type">OrderInfo</span> <span class="variable">noPayOrder</span> <span class="operator">=</span> getNoPayOrder(productId);</span><br><span class="line">        <span class="keyword">if</span> (noPayOrder != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> noPayOrder;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//查询商品信息</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productMapper.selectById(productId);</span><br><span class="line">        <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderInfo</span>();</span><br><span class="line">        orderInfo.setProductId(productId);</span><br><span class="line">        <span class="comment">//订单号,使用工具类获取</span></span><br><span class="line">        orderInfo.setOrderNo(OrderNoUtils.getOrderNo());</span><br><span class="line">        <span class="comment">//订单状态,订单枚举类获取</span></span><br><span class="line">        orderInfo.setOrderStatus(OrderStatus.NOTPAY.getType());</span><br><span class="line">        orderInfo.setTitle(product.getTitle());</span><br><span class="line">        <span class="comment">//订单金额,分</span></span><br><span class="line">        orderInfo.setTotalFee(product.getPrice());</span><br><span class="line">        baseMapper.insert(orderInfo);</span><br><span class="line">        <span class="keyword">return</span> orderInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    OrderInfo <span class="title function_">getNoPayOrder</span><span class="params">(Long productId)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;OrderInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;product_id&quot;</span>, productId);</span><br><span class="line">        wrapper.eq(<span class="string">&quot;order_status&quot;</span>, OrderStatus.NOTPAY.getType());</span><br><span class="line">        <span class="keyword">return</span> baseMapper.selectOne(wrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-2、存储二维码"><a href="#4-3-2、存储二维码" class="headerlink" title="4.3.2、存储二维码"></a>4.3.2、存储二维码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderInfoService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;OrderInfo&gt; &#123;</span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">saveCodeUrl</span><span class="params">(String orderNo,String codeUrl)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderInfoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;OrderInfoMapper, OrderInfo&gt; <span class="keyword">implements</span> <span class="title class_">OrderInfoService</span> &#123;</span><br><span class="line">    <span class="comment">//存储生成的订单编号</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveCodeUrl</span><span class="params">(String orderNo, String codeUrl)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;OrderInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//更新条件</span></span><br><span class="line">        wrapper.eq(<span class="string">&quot;order_no&quot;</span>, orderNo);</span><br><span class="line">        <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderInfo</span>();</span><br><span class="line">        orderInfo.setCodeUrl(codeUrl);</span><br><span class="line">        baseMapper.update(orderInfo, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4、获取订单列表"><a href="#4-4、获取订单列表" class="headerlink" title="4.4、获取订单列表"></a>4.4、获取订单列表</h3><p>创建OrderInfoController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Api(tags = &quot;订单相关接口&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/order&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderInfoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderInfoService orderInfoService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;查询订单列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/listOrder&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">listOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        QueryWrapper&lt;OrderInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;OrderInfo&gt;().orderByDesc(<span class="string">&quot;create_time&quot;</span>);</span><br><span class="line">        List&lt;OrderInfo&gt; list = orderInfoService.list(wrapper);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">&quot;data&quot;</span>, list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://images.hckun.cn/image-20220730122918394.png" alt="image-20220730122918394"></p><h2 id="5、支付通知API"><a href="#5、支付通知API" class="headerlink" title="5、支付通知API"></a>5、支付通知API</h2><h3 id="5-1、接收通知和返回应答"><a href="#5-1、接收通知和返回应答" class="headerlink" title="5.1、接收通知和返回应答"></a>5.1、接收通知和返回应答</h3><p>微信支付通过支付通知接口将用户支付成功消息通知给商户,这里我们要使用内网穿透工具，把我们的内网映射出去，可以让微信调用到我们的通知接口</p><p>增加解析请求体内容工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将通知参数转化为字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readData</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            br = request.getReader();</span><br><span class="line">            <span class="keyword">for</span> (String line; (line = br.readLine()) != <span class="literal">null</span>; ) &#123;</span><br><span class="line">                <span class="keyword">if</span> (result.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    result.append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                result.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (br != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    br.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接收回调通知方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//微信回调通知</span></span><br><span class="line">   <span class="meta">@PostMapping(&quot;/native/notify&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">tokenUrl</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">       <span class="comment">//获取响应数据</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> HttpUtils.readData(request);</span><br><span class="line">       Map&lt;String, Object&gt; map = JSONObject.parseObject(data, Map.class);</span><br><span class="line">       log.info(<span class="string">&quot;接收内容:&#123;&#125;&quot;</span>, map);</span><br><span class="line">       <span class="comment">//成功应答</span></span><br><span class="line">       Map&lt;String, String&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;SUCCESS&quot;</span>);</span><br><span class="line">       result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;成功&quot;</span>);</span><br><span class="line">       <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://images.hckun.cn/image-20220730130123324.png" alt="image-20220730130123324"></p><h3 id="5-2、验签"><a href="#5-2、验签" class="headerlink" title="5.2、验签"></a>5.2、验签</h3><p>对于微信的回调通知我们要进行身份验证，商户系统对于开启结果通知的内容一定要做签名验证，并校验通知的信息是否与商户侧的信息一致，防止数据泄露导致出现“假通知”，造成资金损失</p><p>创建通知验签工具类：WechatPay2ValidatorForRequest</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WechatPay2ValidatorForRequest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(WechatPay2ValidatorForRequest.class);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 应答超时时间，单位为分钟</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">RESPONSE_EXPIRED_MINUTES</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> Verifier verifier;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> String requestId;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> String body;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WechatPay2ValidatorForRequest</span><span class="params">(Verifier verifier, String requestId, String body)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.verifier = verifier;</span><br><span class="line">        <span class="built_in">this</span>.requestId = requestId;</span><br><span class="line">        <span class="built_in">this</span>.body = body;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> IllegalArgumentException <span class="title function_">parameterError</span><span class="params">(String message, Object... args)</span> &#123;</span><br><span class="line">        message = String.format(message, args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;parameter error: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> IllegalArgumentException <span class="title function_">verifyFail</span><span class="params">(String message, Object... args)</span> &#123;</span><br><span class="line">        message = String.format(message, args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;signature verify fail: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">boolean</span> <span class="title function_">validate</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//处理请求参数</span></span><br><span class="line">            validateParameters(request);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//构造验签名串</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> buildMessage(request);</span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">serial</span> <span class="operator">=</span> request.getHeader(WECHAT_PAY_SERIAL);</span><br><span class="line">            <span class="type">String</span> <span class="variable">signature</span> <span class="operator">=</span> request.getHeader(WECHAT_PAY_SIGNATURE);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//验签</span></span><br><span class="line">            <span class="keyword">if</span> (!verifier.verify(serial, message.getBytes(StandardCharsets.UTF_8), signature)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> verifyFail(<span class="string">&quot;serial=[%s] message=[%s] sign=[%s], request-id=[%s]&quot;</span>,</span><br><span class="line">                        serial, message, signature, requestId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">            log.warn(e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">validateParameters</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> ensure HEADER_WECHAT_PAY_TIMESTAMP at last</span></span><br><span class="line">        String[] headers = &#123;WECHAT_PAY_SERIAL, WECHAT_PAY_SIGNATURE, WECHAT_PAY_NONCE, WECHAT_PAY_TIMESTAMP&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">header</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (String headerName : headers) &#123;</span><br><span class="line">            header = request.getHeader(headerName);</span><br><span class="line">            <span class="keyword">if</span> (header == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> parameterError(<span class="string">&quot;empty [%s], request-id=[%s]&quot;</span>, headerName, requestId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断请求是否过期</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">timestampStr</span> <span class="operator">=</span> header;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Instant</span> <span class="variable">responseTime</span> <span class="operator">=</span> Instant.ofEpochSecond(Long.parseLong(timestampStr));</span><br><span class="line">            <span class="comment">// 拒绝过期请求</span></span><br><span class="line">            <span class="keyword">if</span> (Duration.between(responseTime, Instant.now()).abs().toMinutes() &gt;= RESPONSE_EXPIRED_MINUTES) &#123;</span><br><span class="line">                <span class="keyword">throw</span> parameterError(<span class="string">&quot;timestamp=[%s] expires, request-id=[%s]&quot;</span>, timestampStr, requestId);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DateTimeException | NumberFormatException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> parameterError(<span class="string">&quot;invalid timestamp=[%s], request-id=[%s]&quot;</span>, timestampStr, requestId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> String <span class="title function_">buildMessage</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">timestamp</span> <span class="operator">=</span> request.getHeader(WECHAT_PAY_TIMESTAMP);</span><br><span class="line">        <span class="type">String</span> <span class="variable">nonce</span> <span class="operator">=</span> request.getHeader(WECHAT_PAY_NONCE);</span><br><span class="line">        <span class="keyword">return</span> timestamp + <span class="string">&quot;\n&quot;</span></span><br><span class="line">                + nonce + <span class="string">&quot;\n&quot;</span></span><br><span class="line">                + body + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">final</span> String <span class="title function_">getResponseBody</span><span class="params">(CloseableHttpResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">        <span class="keyword">return</span> (entity != <span class="literal">null</span> &amp;&amp; entity.isRepeatable()) ? EntityUtils.toString(entity) : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在微信回调通知中进行签名验证</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/native/notify&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">tokenUrl</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">       Map&lt;String, String&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//获取响应数据</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> HttpUtils.readData(request);</span><br><span class="line">           Map&lt;String, Object&gt; map = JSONObject.parseObject(data, Map.class);</span><br><span class="line">           log.info(<span class="string">&quot;接收内容:&#123;&#125;&quot;</span>, map);</span><br><span class="line">           <span class="comment">//签名验证</span></span><br><span class="line">           <span class="type">WechatPay2ValidatorForRequest</span> <span class="variable">validator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WechatPay2ValidatorForRequest</span>(Verifier, map.get(<span class="string">&quot;id&quot;</span>).toString(), data);</span><br><span class="line">           <span class="keyword">if</span> (!validator.validate(request)) &#123;</span><br><span class="line">               log.info(<span class="string">&quot;签名验证失败&quot;</span>);</span><br><span class="line">               response.setStatus(<span class="number">500</span>);</span><br><span class="line">               result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">               result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">           &#125;</span><br><span class="line">           log.info(<span class="string">&quot;签名验证成功&quot;</span>);</span><br><span class="line">           <span class="comment">//成功应答</span></span><br><span class="line">           response.setStatus(<span class="number">200</span>);</span><br><span class="line">           result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;SUCCESS&quot;</span>);</span><br><span class="line">           result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;成功&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">           result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="5-3、解密"><a href="#5-3、解密" class="headerlink" title="5.3、解密"></a>5.3、解密</h3><p>由于微信回调信息为加密数据，我们需要进行解密获取明文数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">decryption</span><span class="params">(String msg)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">     <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(msg, Map.class);</span><br><span class="line">     Map&lt;String, String&gt; resource = (Map&lt;String, String&gt;) map.get(<span class="string">&quot;resource&quot;</span>);</span><br><span class="line">     <span class="type">AesUtil</span> <span class="variable">aesUtil</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AesUtil</span>(wxPayConfig.getApiV3Key().getBytes(StandardCharsets.UTF_8));</span><br><span class="line">     <span class="type">String</span> <span class="variable">clear</span> <span class="operator">=</span> aesUtil.decryptToString(resource.get(<span class="string">&quot;associated_data&quot;</span>).getBytes(),</span><br><span class="line">             resource.get(<span class="string">&quot;nonce&quot;</span>).getBytes(),</span><br><span class="line">             resource.get(<span class="string">&quot;ciphertext&quot;</span>));</span><br><span class="line">     log.info(<span class="string">&quot;解密后的明文:&#123;&#125;&quot;</span>, clear);</span><br><span class="line">     <span class="keyword">return</span> clear;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="upload%5Cimage-20220730153004594.png" alt="image-20220730153004594"></p><h3 id="5-4、处理订单"><a href="#5-4、处理订单" class="headerlink" title="5.4、处理订单"></a>5.4、处理订单</h3><h4 id="5-4-1、处理订单业务"><a href="#5-4-1、处理订单业务" class="headerlink" title="5.4.1、处理订单业务"></a>5.4.1、处理订单业务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dealOrder</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">clear</span> <span class="operator">=</span> <span class="built_in">this</span>.decryption(data);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(clear, Map.class);</span><br><span class="line">        <span class="comment">//更新订单状态</span></span><br><span class="line">        orderInfoService.updateState(map.get(<span class="string">&quot;out_trade_no&quot;</span>).toString(), OrderStatus.SUCCESS);</span><br><span class="line">        <span class="comment">//记录支付日志</span></span><br><span class="line">        paymentInfoService.savePaymentInfo(map);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-2、更新订单状态"><a href="#5-4-2、更新订单状态" class="headerlink" title="5.4.2、更新订单状态"></a>5.4.2、更新订单状态</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">updateState</span><span class="params">(String orderNo, OrderStatus success)</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateState</span><span class="params">(String orderNo, OrderStatus success)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;OrderInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//更新条件</span></span><br><span class="line">        wrapper.eq(<span class="string">&quot;order_no&quot;</span>, orderNo);</span><br><span class="line">        <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderInfo</span>();</span><br><span class="line">        orderInfo.setOrderStatus(success.getType());</span><br><span class="line">        baseMapper.update(orderInfo, wrapper);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-3、记录支付日志"><a href="#5-4-3、记录支付日志" class="headerlink" title="5.4.3、记录支付日志"></a>5.4.3、记录支付日志</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">savePaymentInfo</span><span class="params">(Map map)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">savePaymentInfo</span><span class="params">(Map map)</span> &#123;</span><br><span class="line">        <span class="type">PaymentInfo</span> <span class="variable">paymentInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaymentInfo</span>();</span><br><span class="line">        paymentInfo.setOrderNo(map.get(<span class="string">&quot;out_trade_no&quot;</span>).toString());</span><br><span class="line">        paymentInfo.setPaymentType(<span class="string">&quot;微信支付&quot;</span>);</span><br><span class="line">        paymentInfo.setTransactionId(map.get(<span class="string">&quot;transaction_id&quot;</span>).toString());</span><br><span class="line">        paymentInfo.setTradeType(map.get(<span class="string">&quot;trade_type&quot;</span>).toString());</span><br><span class="line">        paymentInfo.setTradeState(map.get(<span class="string">&quot;trade_state&quot;</span>).toString());</span><br><span class="line">        <span class="type">Map</span> <span class="variable">amount</span> <span class="operator">=</span> (Map) map.get(<span class="string">&quot;amount&quot;</span>);</span><br><span class="line">        paymentInfo.setPayerTotal(Integer.valueOf(amount.get(<span class="string">&quot;payer_total&quot;</span>).toString()));</span><br><span class="line">        paymentInfo.setContent(JSONObject.toJSONString(map));</span><br><span class="line">        baseMapper.insert(paymentInfo);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-5、处理重复通知"><a href="#5-5、处理重复通知" class="headerlink" title="5.5、处理重复通知"></a>5.5、处理重复通知</h3><p>用户支付完成后，微信会把相关支付结果和用户信息发送给商户，商户需要接收处理该消息，并返回应答。对后台通知交互时，如果微信收到商户的应答不符合规范或超时，微信认为通知失败，微信会通过一定的策略定期重新发起通知，尽可能提高通知的成功率，但微信不保证通知最终能成功。（通知频率为15s/15s/30s/3m/10m/20m/30m/30m/30m/60m/3h/3h/3h/6h/6h - 总计 24h4m）</p><p><img src="https://images.hckun.cn/image-20220730155955165.png" alt="image-20220730155955165"></p><p>在处理订单任务之前，需对订单支付状态进行查询判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dealOrder</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">clear</span> <span class="operator">=</span> <span class="built_in">this</span>.decryption(data);</span><br><span class="line">    <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(clear, Map.class);</span><br><span class="line">    <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> map.get(<span class="string">&quot;out_trade_no&quot;</span>).toString();</span><br><span class="line">    <span class="comment">//查询订单支付状态</span></span><br><span class="line">    <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> orderInfoService.getState(orderNo);</span><br><span class="line">    <span class="keyword">if</span> (orderInfo != <span class="literal">null</span> &amp;&amp; !orderInfo.getOrderStatus().equals(OrderStatus.NOTPAY.getType())) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//更新订单状态</span></span><br><span class="line">    orderInfoService.updateState(orderNo, OrderStatus.SUCCESS);</span><br><span class="line">    <span class="comment">//记录支付日志</span></span><br><span class="line">    paymentInfoService.savePaymentInfo(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">OrderInfo <span class="title function_">getState</span><span class="params">(String orderNo)</span>;</span><br><span class="line"><span class="keyword">public</span> OrderInfo <span class="title function_">getState</span><span class="params">(String orderNo)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;OrderInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;order_no&quot;</span>,orderNo);</span><br><span class="line">        <span class="keyword">return</span> baseMapper.selectOne(wrapper);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="5-6、数据锁"><a href="#5-6、数据锁" class="headerlink" title="5.6、数据锁"></a>5.6、数据锁</h3><p>在6.5我们已经实现了对重复请求处理进行判断,但在并发情况下仍会出现,所以我们需要加锁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxPayServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">WxPayService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ReentrantLock</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ReentrantLock</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dealOrder</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">clear</span> <span class="operator">=</span> <span class="built_in">this</span>.decryption(data);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(clear, Map.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> map.get(<span class="string">&quot;out_trade_no&quot;</span>).toString();</span><br><span class="line">        <span class="keyword">if</span> (lock.tryLock()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//查询订单支付状态</span></span><br><span class="line">                <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> orderInfoService.getState(orderNo);</span><br><span class="line">                <span class="keyword">if</span> (orderInfo != <span class="literal">null</span> &amp;&amp; !orderInfo.getOrderStatus().equals(OrderStatus.NOTPAY.getType())) &#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//更新订单状态</span></span><br><span class="line">                orderInfoService.updateState(orderNo, OrderStatus.SUCCESS);</span><br><span class="line">                <span class="comment">//记录支付日志</span></span><br><span class="line">                paymentInfoService.savePaymentInfo(map);</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                lock.unlock();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、商户定时查询本地订单"><a href="#6、商户定时查询本地订单" class="headerlink" title="6、商户定时查询本地订单"></a>6、商户定时查询本地订单</h2><p>支付成功后，商户查询本地数据库，订单是否支付成功，然后前端进行相应的操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;查询订单状态&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/orderState/&#123;orderNo&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">orderState</span><span class="params">(<span class="meta">@PathVariable</span> String orderNo)</span> &#123;</span><br><span class="line">    <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> orderInfoService.getState(orderNo);</span><br><span class="line">    <span class="keyword">if</span> (orderInfo != <span class="literal">null</span> &amp;&amp; orderInfo.getOrderStatus().equals(OrderStatus.SUCCESS.getType()))&#123;</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;支付成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R.error().data(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;支付中...&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询订单状态</span></span><br><span class="line">    <span class="title function_">queryOrderStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line">      orderInfoApi.<span class="title function_">queryOrderStatus</span>(<span class="variable language_">this</span>.<span class="property">orderNo</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;查询订单状态：&#x27;</span> + response.<span class="property">code</span>)</span><br><span class="line">        <span class="comment">// 支付成功后的页面跳转</span></span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">code</span> === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;清除定时器&#x27;</span>)</span><br><span class="line">          <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">          <span class="comment">// 三秒后跳转到支付成功页面</span></span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="attr">path</span>: <span class="string">&#x27;/success&#x27;</span> &#125;)</span><br><span class="line">          &#125;, <span class="number">3000</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><img src="upload%5Cimage-20220730164557665.png" alt="image-20220730164557665"></p><h2 id="7、用户取消订单API接口"><a href="#7、用户取消订单API接口" class="headerlink" title="7、用户取消订单API接口"></a>7、用户取消订单API接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/cancleOder/&#123;orderNo&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancleOder</span><span class="params">(<span class="meta">@PathVariable</span> String orderNo)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            wxPayService.cancleOder(orderNo);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">cancleOder</span><span class="params">(String orderNo)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cancleOder</span><span class="params">(String orderNo)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> String.format(wxPayConfig.getDomain().concat(WxApiType.CLOSE_ORDER_BY_NO.getType()), orderNo);</span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;mchid&quot;</span>, wxPayConfig.getMchId());</span><br><span class="line">        <span class="type">StringEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(JSONObject.toJSONString(params), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        entity.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        httpPost.setEntity(entity);</span><br><span class="line">        httpPost.setHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//完成签名并执行请求</span></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> wxPayConfig.getHttpClient().execute(httpPost);</span><br><span class="line">        <span class="comment">//响应状态码</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> response.getStatusLine().getStatusCode();</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">204</span> == statusCode) &#123;</span><br><span class="line">            <span class="comment">//取消成功,更新订单状态</span></span><br><span class="line">            orderInfoService.updateState(orderNo, OrderStatus.CANCEL);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="8、微信支付查单API"><a href="#8、微信支付查单API" class="headerlink" title="8、微信支付查单API"></a>8、微信支付查单API</h2><h3 id="8-1、集成Spring-Task"><a href="#8-1、集成Spring-Task" class="headerlink" title="8.1、集成Spring Task"></a>8.1、集成Spring Task</h3><ul><li><p>SpringBoot启动类增加@EnableScheduling</p></li><li><p>编写测试方法测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxPayTask</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试</span></span><br><span class="line"><span class="comment">     * (cron=&quot;秒 分 时 日 月 周&quot;)</span></span><br><span class="line"><span class="comment">     * *：每隔一秒执行</span></span><br><span class="line"><span class="comment">     * 0/3：从第0秒开始，每隔3秒执行一次</span></span><br><span class="line"><span class="comment">     * 1-3: 从第1秒开始执行，到第3秒结束执行</span></span><br><span class="line"><span class="comment">     * 1,2,3：第1、2、3秒执行</span></span><br><span class="line"><span class="comment">     * ?：不指定，若指定日期，则不指定周，反之同理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled(cron=&quot;0/3 * * * * ?&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">task</span><span class="params">()</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;定时任务执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-2、定时处理超时订单"><a href="#8-2、定时处理超时订单" class="headerlink" title="8.2、定时处理超时订单"></a>8.2、定时处理超时订单</h3><p>每隔30秒查询查过5分钟且未支付的订单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;OrderInfo&gt; <span class="title function_">getTimeOutOrder</span><span class="params">(<span class="type">int</span> min)</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">instance</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        instance.add(Calendar.MINUTE,-<span class="number">5</span>);</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        QueryWrapper&lt;OrderInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.le(<span class="string">&quot;create_time&quot;</span>, format.format(instance.getTime()));</span><br><span class="line">        wrapper.eq(<span class="string">&quot;order_status&quot;</span>,OrderStatus.NOTPAY.getType());</span><br><span class="line">        <span class="keyword">return</span> baseMapper.selectList(wrapper);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="8-3、处理超时订单"><a href="#8-3、处理超时订单" class="headerlink" title="8.3、处理超时订单"></a>8.3、处理超时订单</h3><p>对于已支付的订单：进行修改订单状态、记录支付记录</p><p>对于未支付订单：进行取消支付操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Scheduled(cron = &quot;0/30 * * * * ?&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">task</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;定时任务执行&quot;</span>);</span><br><span class="line">        List&lt;OrderInfo&gt; orderList = orderInfoService.getTimeOutOrder(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">for</span> (OrderInfo orderInfo : orderList) &#123;</span><br><span class="line">            <span class="comment">//查询订单状态</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> wxPayService.queryOrderState(orderInfo.getOrderNo());</span><br><span class="line">            Map&lt;String, Object&gt; jsonObject = JSONObject.parseObject(result, Map.class);</span><br><span class="line">            <span class="type">Object</span> <span class="variable">tradeState</span> <span class="operator">=</span> jsonObject.get(<span class="string">&quot;trade_state_desc&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (OrderStatus.SUCCESS.getType().equals(tradeState.toString())) &#123;</span><br><span class="line">                <span class="comment">//修改订单状态</span></span><br><span class="line">                orderInfoService.updateState(orderInfo.getOrderNo(), OrderStatus.SUCCESS);</span><br><span class="line">                <span class="comment">//记录支付日志</span></span><br><span class="line">                paymentInfoService.savePaymentInfo(jsonObject);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tradeState.toString().contains(OrderStatus.NOTPAY.getType())) &#123;</span><br><span class="line">                <span class="comment">//未支付,取消支付,更新订单状态</span></span><br><span class="line">                wxPayService.cancleOder(orderInfo.getOrderNo());</span><br><span class="line">                orderInfoService.updateState(orderInfo.getOrderNo(), OrderStatus.CLOSED);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9、申请退款API"><a href="#9、申请退款API" class="headerlink" title="9、申请退款API"></a>9、申请退款API</h2><p><a href="https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_9.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_9.shtml</a></p><p><img src="https://images.hckun.cn/image-20220731101830006.png" alt="image-20220731101830006"></p><h3 id="9-1、创建退款单"><a href="#9-1、创建退款单" class="headerlink" title="9.1、创建退款单"></a>9.1、创建退款单</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">RefundInfo <span class="title function_">save</span><span class="params">(String orderNo, String reason)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> RefundInfo <span class="title function_">save</span><span class="params">(String orderNo, String reason)</span> &#123;</span><br><span class="line">        <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> orderInfoService.getState(orderNo);</span><br><span class="line">        <span class="type">RefundInfo</span> <span class="variable">refundInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RefundInfo</span>();</span><br><span class="line">        refundInfo.setOrderNo(orderNo);</span><br><span class="line">        refundInfo.setReason(reason);</span><br><span class="line">        <span class="comment">//退款订单编号</span></span><br><span class="line">        refundInfo.setRefundNo(OrderNoUtils.getRefundNo());</span><br><span class="line">        <span class="comment">//原订单金额</span></span><br><span class="line">        refundInfo.setTotalFee(orderInfo.getTotalFee());</span><br><span class="line">        <span class="comment">//退款金额</span></span><br><span class="line">        refundInfo.setRefund(orderInfo.getTotalFee());</span><br><span class="line">        baseMapper.insert(refundInfo);</span><br><span class="line">        <span class="keyword">return</span> refundInfo;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="9-2、更新退款单"><a href="#9-2、更新退款单" class="headerlink" title="9.2、更新退款单"></a>9.2、更新退款单</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">updateRefund</span><span class="params">(String result)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateRefund</span><span class="params">(String result)</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(result, Map.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">refundNo</span> <span class="operator">=</span>  map.get(<span class="string">&quot;out_refund_no&quot;</span>).toString();</span><br><span class="line">        QueryWrapper&lt;RefundInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;refund_no&quot;</span>, refundNo);</span><br><span class="line">        <span class="type">RefundInfo</span> <span class="variable">refundInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RefundInfo</span>();</span><br><span class="line">        refundInfo.setContentReturn(result);</span><br><span class="line">        refundInfo.setRefundId(map.get(<span class="string">&quot;refund_id&quot;</span>).toString());</span><br><span class="line">        refundInfo.setRefundStatus(map.get(<span class="string">&quot;status&quot;</span>).toString());</span><br><span class="line">        baseMapper.update(refundInfo,wrapper);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="9-3、申请退款"><a href="#9-3、申请退款" class="headerlink" title="9.3、申请退款"></a>9.3、申请退款</h3><p>WxPayController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;申请退款&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/refunds/&#123;orderNo&#125;/&#123;reason&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> R <span class="title function_">refunds</span><span class="params">(<span class="meta">@PathVariable</span> String orderNo,<span class="meta">@PathVariable</span> String reason)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">           wxPayService.refunds(orderNo,reason);</span><br><span class="line">            <span class="keyword">return</span> R.ok();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>WxPayService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">refunds</span><span class="params">(String orderNo, String reason)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refunds</span><span class="params">(String orderNo, String reason)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="comment">//创建退款订单</span></span><br><span class="line">        <span class="type">RefundInfo</span> <span class="variable">refundInfo</span> <span class="operator">=</span> refundInfoService.save(orderNo, reason);</span><br><span class="line">        <span class="comment">//调用退款API</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> wxPayConfig.getDomain().concat(WxApiType.DOMESTIC_REFUNDS.getType());</span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line">        <span class="comment">// 请求body参数</span></span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;out_trade_no&quot;</span>, orderNo);</span><br><span class="line">        params.put(<span class="string">&quot;out_refund_no&quot;</span>, refundInfo.getRefundNo());</span><br><span class="line">        params.put(<span class="string">&quot;reason&quot;</span>, reason);</span><br><span class="line">        <span class="comment">//退款结果通知url</span></span><br><span class="line">        params.put(<span class="string">&quot;notify_url&quot;</span>, wxPayConfig.getNotifyDomain().concat(WxNotifyType.REFUND_NOTIFY.getType()));</span><br><span class="line">        Map&lt;String, Object&gt; amountMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//原订单金额</span></span><br><span class="line">        amountMap.put(<span class="string">&quot;total&quot;</span>, refundInfo.getTotalFee());</span><br><span class="line">        <span class="comment">//退款金额</span></span><br><span class="line">        amountMap.put(<span class="string">&quot;refund&quot;</span>, refundInfo.getRefund());</span><br><span class="line">        amountMap.put(<span class="string">&quot;currency&quot;</span>, <span class="string">&quot;CNY&quot;</span>);</span><br><span class="line">        params.put(<span class="string">&quot;amount&quot;</span>, amountMap);</span><br><span class="line">        <span class="type">StringEntity</span> <span class="variable">entity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(JSONObject.toJSONString(params), <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        entity.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        httpPost.setEntity(entity);</span><br><span class="line">        httpPost.setHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//完成签名并执行请求</span></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> wxPayConfig.getHttpClient().execute(httpPost);</span><br><span class="line">        <span class="comment">//响应状态码</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> response.getStatusLine().getStatusCode();</span><br><span class="line">        <span class="comment">//响应结果</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">200</span>==statusCode)&#123;</span><br><span class="line">            <span class="comment">//申请退款成功,返回信息</span></span><br><span class="line">            log.info(<span class="string">&quot;申请退款返回内容:&#123;&#125;&quot;</span>,result);</span><br><span class="line">            <span class="comment">//更新订单、退款记录</span></span><br><span class="line">            orderInfoService.updateState(orderNo,OrderStatus.REFUND_PROCESSING);</span><br><span class="line">            refundInfoService.updateRefund(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="9-4、退款结果通知"><a href="#9-4、退款结果通知" class="headerlink" title="9.4、退款结果通知"></a>9.4、退款结果通知</h3><p>处理微信申请退款回调通知</p><p>WxPayController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//申请退款回调通知</span></span><br><span class="line">   <span class="meta">@PostMapping(&quot;/refunds/notify&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">refundsNotify</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">       Map&lt;String, String&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//获取响应数据</span></span><br><span class="line">           <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> HttpUtils.readData(request);</span><br><span class="line">           Map&lt;String, Object&gt; map = JSONObject.parseObject(data, Map.class);</span><br><span class="line">           log.info(<span class="string">&quot;接收内容:&#123;&#125;&quot;</span>, map);</span><br><span class="line">           <span class="comment">//签名验证</span></span><br><span class="line">           <span class="type">WechatPay2ValidatorForRequest</span> <span class="variable">validator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WechatPay2ValidatorForRequest</span>(Verifier, map.get(<span class="string">&quot;id&quot;</span>).toString(), data);</span><br><span class="line">           <span class="keyword">if</span> (!validator.validate(request)) &#123;</span><br><span class="line">               log.info(<span class="string">&quot;签名验证失败&quot;</span>);</span><br><span class="line">               response.setStatus(<span class="number">500</span>);</span><br><span class="line">               result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">               result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">           &#125;</span><br><span class="line">           log.info(<span class="string">&quot;签名验证成功&quot;</span>);</span><br><span class="line">           <span class="comment">//处理退款订单</span></span><br><span class="line">           wxPayService.dealRefundOrder(data);</span><br><span class="line">           <span class="comment">//成功应答</span></span><br><span class="line">           response.setStatus(<span class="number">200</span>);</span><br><span class="line">           result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;SUCCESS&quot;</span>);</span><br><span class="line">           result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;成功&quot;</span>);</span><br><span class="line">           <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           result.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">           result.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> JSONObject.toJSONString(result);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>WxPayService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">dealRefundOrder</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dealRefundOrder</span><span class="params">(String data)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">       <span class="comment">//解密密文</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">clear</span> <span class="operator">=</span> <span class="built_in">this</span>.decryption(data);</span><br><span class="line">       <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(clear, Map.class);</span><br><span class="line">       log.info(<span class="string">&quot;退款回调内容:&quot;</span>,clear);</span><br><span class="line">       <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> map.get(<span class="string">&quot;out_trade_no&quot;</span>).toString();</span><br><span class="line">       <span class="keyword">if</span> (lock.tryLock()) &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="comment">//查询订单支付状态</span></span><br><span class="line">               <span class="type">OrderInfo</span> <span class="variable">orderInfo</span> <span class="operator">=</span> orderInfoService.getState(orderNo);</span><br><span class="line">               <span class="keyword">if</span> (orderInfo != <span class="literal">null</span> &amp;&amp; !orderInfo.getOrderStatus().equals(OrderStatus.REFUND_PROCESSING.getType())) &#123;</span><br><span class="line">                   <span class="keyword">return</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">//更新订单状态</span></span><br><span class="line">               orderInfoService.updateState(orderNo, OrderStatus.REFUND_SUCCESS);</span><br><span class="line">               <span class="comment">//更新退款单状态</span></span><br><span class="line">               refundInfoService.updateRefund(clear);</span><br><span class="line">           &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">               lock.unlock();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>RefundInfoService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateRefund</span><span class="params">(String result)</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(result, Map.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">refundNo</span> <span class="operator">=</span> map.get(<span class="string">&quot;out_refund_no&quot;</span>).toString();</span><br><span class="line">        QueryWrapper&lt;RefundInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;refund_no&quot;</span>, refundNo);</span><br><span class="line">        <span class="type">RefundInfo</span> <span class="variable">refundInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RefundInfo</span>();</span><br><span class="line">        refundInfo.setRefundId(map.get(<span class="string">&quot;refund_id&quot;</span>).toString());</span><br><span class="line">        <span class="comment">//申请退款通知</span></span><br><span class="line">        <span class="keyword">if</span> (map.get(<span class="string">&quot;status&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">            refundInfo.setRefundStatus(map.get(<span class="string">&quot;status&quot;</span>).toString());</span><br><span class="line">            refundInfo.setContentReturn(result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//退款回调通知</span></span><br><span class="line">        <span class="keyword">if</span> (map.get(<span class="string">&quot;refund_status&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">            refundInfo.setRefundStatus(map.get(<span class="string">&quot;refund_status&quot;</span>).toString());</span><br><span class="line">            refundInfo.setContentNotify(result);</span><br><span class="line">        &#125;</span><br><span class="line">        baseMapper.update(refundInfo, wrapper);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="10、查询退款API"><a href="#10、查询退款API" class="headerlink" title="10、查询退款API"></a>10、查询退款API</h2><h3 id="10-1、查询退款订单"><a href="#10-1、查询退款订单" class="headerlink" title="10.1、查询退款订单"></a>10.1、查询退款订单</h3><p>提交退款申请后，通过调用该接口查询退款状态。退款有一定延时，建议在提交退款申请后1分钟发起查询退款状态，一般来说零钱支付的退款5分钟内到账，银行卡支付的退款1-3个工作日到账。</p><p>WxPayController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;查询退款&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/queryRefunds/&#123;refundNo&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">refunds</span><span class="params">(<span class="meta">@PathVariable</span> String refundNo)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> wxPayService.queryRefunds(refundNo);</span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">&quot;msg&quot;</span>, result);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R.error();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WxPayService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">queryRefunds</span><span class="params">(String refundNo)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">queryRefunds</span><span class="params">(String refundNo)</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> String.format(wxPayConfig.getDomain().concat(WxApiType.DOMESTIC_REFUNDS_QUERY.getType()), refundNo);</span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        httpGet.setHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//完成签名并执行请求</span></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> wxPayConfig.getHttpClient().execute(httpGet);</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试结果:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;&#123;&quot;</span>amount<span class="string">&quot;:&#123;&quot;</span>currency<span class="string">&quot;:&quot;</span>CNY<span class="string">&quot;,&quot;</span>discount_refund<span class="string">&quot;:0,&quot;</span>from<span class="string">&quot;:[],&quot;</span>payer_refund<span class="string">&quot;:1,&quot;</span>payer_total<span class="string">&quot;:1,&quot;</span>refund<span class="string">&quot;:1,&quot;</span>settlement_refund<span class="string">&quot;:1,&quot;</span>settlement_total<span class="string">&quot;:1,&quot;</span>total<span class="string">&quot;:1&#125;,&quot;</span>channel<span class="string">&quot;:&quot;</span>ORIGINAL<span class="string">&quot;,&quot;</span>create_time<span class="string">&quot;:&quot;</span><span class="number">2022</span><span class="number">-07</span><span class="number">-31</span>T11<span class="punctuation">:</span><span class="number">18</span><span class="punctuation">:</span><span class="number">37</span>+<span class="number">08</span><span class="punctuation">:</span><span class="number">00</span><span class="string">&quot;,&quot;</span>funds_account<span class="string">&quot;:&quot;</span>AVAILABLE<span class="string">&quot;,&quot;</span>out_refund_no<span class="string">&quot;:&quot;</span>REFUND_20220731111750766<span class="string">&quot;,&quot;</span>out_trade_no<span class="string">&quot;:&quot;</span>ORDER_20220731111723768<span class="string">&quot;,&quot;</span>promotion_detail<span class="string">&quot;:[],&quot;</span>refund_id<span class="string">&quot;:&quot;</span><span class="number">50302202652022073123263356639</span><span class="string">&quot;,&quot;</span>status<span class="string">&quot;:&quot;</span>SUCCESS<span class="string">&quot;,&quot;</span>success_time<span class="string">&quot;:&quot;</span><span class="number">2022</span><span class="number">-07</span><span class="number">-31</span>T11<span class="punctuation">:</span><span class="number">18</span><span class="punctuation">:</span><span class="number">44</span>+<span class="number">08</span><span class="punctuation">:</span><span class="number">00</span><span class="string">&quot;,&quot;</span>transaction_id<span class="string">&quot;:&quot;</span><span class="number">4200001544202207317704787292</span><span class="string">&quot;,&quot;</span>user_received_account<span class="string">&quot;:&quot;</span>支付用户零钱<span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="10-2、超时未处理退款订单"><a href="#10-2、超时未处理退款订单" class="headerlink" title="10.2、超时未处理退款订单"></a>10.2、超时未处理退款订单</h3><p>使用定时任务对超时未处理的退款订单进行处理</p><p>创建定时任务处理方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从第0秒开始每隔30秒执行1次，查询创建超过5分钟，并且未成功的退款单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0/30 * * * * ?&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refundConfirm</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;refundConfirm 被执行......&quot;</span>);</span><br><span class="line">        <span class="comment">//找出申请退款超过5分钟并且未成功的退款单</span></span><br><span class="line">        List&lt;RefundInfo&gt; refundInfoList =</span><br><span class="line">                refundInfoService.getNoRefundOrderByDuration(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">for</span> (RefundInfo refundInfo : refundInfoList) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">refundNo</span> <span class="operator">=</span> refundInfo.getRefundNo();</span><br><span class="line">            log.warn(<span class="string">&quot;超时未退款的退款单号 ===&gt; &#123;&#125;&quot;</span>, refundNo);</span><br><span class="line">            <span class="comment">//核实订单状态：调用微信支付查询退款接口</span></span><br><span class="line">            wxPayService.checkRefundStatus(refundNo);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>超时退款单查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">List&lt;RefundInfo&gt; <span class="title function_">getNoRefundOrderByDuration</span><span class="params">(<span class="type">int</span> min)</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> List&lt;RefundInfo&gt; <span class="title function_">getNoRefundOrderByDuration</span><span class="params">(<span class="type">int</span> min)</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">instance</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        instance.add(Calendar.MINUTE,-<span class="number">5</span>);</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        QueryWrapper&lt;RefundInfo&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.le(<span class="string">&quot;create_time&quot;</span>, format.format(instance.getTime()));</span><br><span class="line">        wrapper.eq(<span class="string">&quot;refund_status&quot;</span>, <span class="string">&quot;PROCESSING&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> baseMapper.selectList(wrapper);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>wxPayService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">checkRefundStatus</span><span class="params">(String refundNo)</span><span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkRefundStatus</span><span class="params">(String refundNo)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//调用查询退款单接口</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> queryRefunds(refundNo);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> JSONObject.parseObject(result, Map.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> map.get(<span class="string">&quot;status&quot;</span>).toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> map.get(<span class="string">&quot;out_trade_no&quot;</span>).toString();</span><br><span class="line">        <span class="keyword">if</span> (OrderStatus.SUCCESS.getType().equals(status)) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;核实订单已退款成功 ===&gt; &#123;&#125;&quot;</span>, refundNo);</span><br><span class="line">            <span class="comment">//如果确认退款成功，则更新订单状态</span></span><br><span class="line">            orderInfoService.updateState(orderNo,</span><br><span class="line">                    OrderStatus.REFUND_SUCCESS);</span><br><span class="line">            <span class="comment">//更新退款单</span></span><br><span class="line">            refundInfoService.updateRefund(result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;ABNORMAL&quot;</span>.equals(status)) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;核实订单退款异常 ===&gt; &#123;&#125;&quot;</span>, refundNo);</span><br><span class="line">            <span class="comment">//如果确认退款成功，则更新订单状态</span></span><br><span class="line">            orderInfoService.updateState(orderNo,</span><br><span class="line">                    OrderStatus.REFUND_ABNORMAL);</span><br><span class="line">            <span class="comment">//更新退款单</span></span><br><span class="line">            refundInfoService.updateRefund(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="11、账单"><a href="#11、账单" class="headerlink" title="11、账单"></a>11、账单</h2><h3 id="11-1、申请交易账单和资金账单"><a href="#11-1、申请交易账单和资金账单" class="headerlink" title="11.1、申请交易账单和资金账单"></a>11.1、申请交易账单和资金账单</h3><p><strong>交易账单</strong></p><p>微信支付按天提供交易账单文件，商户可以通过该接口获取账单文件的下载地址。文件内包含交易相关的金额、时间、营销等信息，供商户核对订单、退款、银行到账等情况。</p><blockquote><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><p>• 微信侧未成功下单的交易不会出现在对账单中。支付成功后撤销的交易会出现在对账单中，跟原支付单订单号一致；</p><p>• 对账单中涉及金额的字段单位为“元”；</p><p>• 对账单接口只能下载三个月以内的账单。</p></blockquote><p><strong>资金账单</strong></p><p>微信支付按天提供微信支付账户的资金流水账单文件，商户可以通过该接口获取账单文件的下载地址。文件内包含该账户资金操作相关的业务单号、收支金额、记账时间等信息，供商户进行核对。</p><blockquote><h4 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h4><p>• 资金账单中的数据反映的是商户微信支付账户资金变动情况；</p><p>• 对账单中涉及金额的字段单位为“元”。</p></blockquote><p>WxPayController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;获取账单url&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/querybill/&#123;billDate&#125;/&#123;type&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">queryTradeBill</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@PathVariable</span> String billDate,</span></span><br><span class="line"><span class="params">        <span class="meta">@PathVariable</span> String type)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    log.info(<span class="string">&quot;获取账单url&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">downloadUrl</span> <span class="operator">=</span> wxPayService.queryBill(billDate, type);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;downloadUrl&quot;</span>, downloadUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WxPayService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">queryBill</span><span class="params">(String billDate, String type)</span><span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">queryBill</span><span class="params">(String billDate, String type)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;tradebill&quot;</span>.equals(type)) &#123;</span><br><span class="line">            <span class="comment">//交易账单</span></span><br><span class="line">            url = WxApiType.TRADE_BILLS.getType();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;fundflowbill&quot;</span>.equals(type)) &#123;</span><br><span class="line">            <span class="comment">//资金账单</span></span><br><span class="line">            url = WxApiType.FUND_FLOW_BILLS.getType();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;不支持的账单类型&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        url = wxPayConfig.getDomain().concat(url).concat(<span class="string">&quot;?bill_date=&quot;</span>).concat(billDate);</span><br><span class="line">        <span class="comment">//创建远程Get 请求对象</span></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        httpGet.addHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//使用wxPayClient发送请求得到响应</span></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> wxPayConfig.getHttpClient().execute(httpGet);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">bodyAsString</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">            <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> response.getStatusLine().getStatusCode();</span><br><span class="line">            <span class="keyword">if</span> (statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="comment">//获取账单下载地址</span></span><br><span class="line">                Map&lt;String, String&gt; resultMap = JSONObject.parseObject(bodyAsString,</span><br><span class="line">                        Map.class);</span><br><span class="line">                <span class="keyword">return</span> resultMap.get(<span class="string">&quot;download_url&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            response.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>成功获取到下载地址</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;downloadUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.mch.weixin.qq.com/v3/billdownload/file?token=YGnAEdXw0UN-ZokmoldJpshHJz7tDWBgGCtRTrDOIjYCzVCAVM-ScQxFi2Yr9kr6&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="11-2、下载账单"><a href="#11-2、下载账单" class="headerlink" title="11.2、下载账单"></a>11.2、下载账单</h3><p>下载账单API为通用接口，交易/资金账单都可以通过该接口获取到对应的账单。</p><blockquote><h4 id="注意：-2"><a href="#注意：-2" class="headerlink" title="注意："></a>注意：</h4><p>• 账单文件的下载地址的有效时间为30s。</p><p>• 强烈建议商户将实际账单文件的哈希值和之前从接口获取到的哈希值进行比对，以确认数据的完整性。</p><p>• 该接口响应的信息请求头中不包含微信接口响应的签名值，因此需要跳过验签的流程。</p><p>•微信在次日9点启动生成前一天的对账单，建议商户10点后再获取。</p></blockquote><p>WxPayController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;下载账单&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/downloadbill/&#123;billDate&#125;/&#123;type&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> R <span class="title function_">downloadBill</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@PathVariable</span> String billDate,</span></span><br><span class="line"><span class="params">        <span class="meta">@PathVariable</span> String type)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    log.info(<span class="string">&quot;下载账单&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> wxPayService.downloadBill(billDate, type);</span><br><span class="line">    <span class="keyword">return</span> R.ok().data(<span class="string">&quot;result&quot;</span>, result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WxPayService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">String <span class="title function_">downloadBill</span><span class="params">(String billDate, String type)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">downloadBill</span><span class="params">(String billDate, String type)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.warn(<span class="string">&quot;下载账单接口调用 &#123;&#125;, &#123;&#125;&quot;</span>, billDate, type);</span><br><span class="line">        <span class="comment">//获取账单url地址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">downloadUrl</span> <span class="operator">=</span> <span class="built_in">this</span>.queryBill(billDate, type);</span><br><span class="line">        <span class="comment">//创建远程Get 请求对象</span></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(downloadUrl);</span><br><span class="line">        httpGet.addHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        <span class="comment">//使用wxPayClient发送请求得到响应</span></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> WechatPayHttpClientBuilder.create()</span><br><span class="line">                .withMerchant(wxPayConfig.getMchId(), wxPayConfig.getMchSerialNo(), wxPayConfig.getPrivateKey(wxPayConfig.getPrivateKeyPath()))</span><br><span class="line">                .withValidator(response -&gt; <span class="literal">true</span>) <span class="comment">// <span class="doctag">NOTE:</span> 设置一个空的应答签名验证器，**不要**用在业务请求</span></span><br><span class="line">                .build();</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpGet);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">bodyAsString</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity());</span><br><span class="line">            <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> response.getStatusLine().getStatusCode();</span><br><span class="line">            <span class="keyword">if</span> (statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> bodyAsString;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            response.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>更多使用API详见微信支付官方文档:<a href="https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/pages/index.shtml">https://pay.weixin.qq.com/wiki/doc/apiv3/wxpay/pages/index.shtml</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 支付 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信支付 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ授权登录</title>
      <link href="/post/ef1ae727.html"/>
      <url>/post/ef1ae727.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、QQ登录介绍"><a href="#1、QQ登录介绍" class="headerlink" title="1、QQ登录介绍"></a>1、QQ登录介绍</h2><p>QQ互联开放平台为第三方网站提供了丰富的API。第三方网站接入QQ互联开放平台后，即可通过调用平台提供的API实现用户使用QQ帐号登录网站功能，且可以获取到腾讯QQ用户的相关信息。<br>第三方网站也可以调用腾讯方提供的API实现网站的分享、评论、邀请等功能，即网站的社交化功能。且可以将相关信息同步到QQ空间、腾讯朋友、腾讯微博等平台，建立网站与腾讯各平台的互动关系，利用庞大的QQ用户群来实现网站的快速传播。<span id="more"></span><br>网站接入QQ互联开放平台后，您将获得：<br><strong>海量新用户</strong>：用户使用已有的QQ号码即可登录网站，QQ一键登录更可减少登录交互操作，大大降低网站注册门槛，给网站带来海量新用户。<br><strong>活跃的访问量</strong>：已登录用户可以将在网站上发布、分享的信息即时同步到QQ空间，使网站内容通过QQ好友关系链得到进一步的传播，从而提升网站的访问量。<br><strong>丰富的开放API</strong>：网站可以通过用户资料接口获取用户的空间昵称和头像，来丰富用户注册资料。此外，还可以通过说说，相册，日志等开放接口使用户直接在网站上访问或修改他们在QQ空间、腾讯朋友、腾讯微博上的数据，与腾讯各平台实现更进一步的互联互通。</p><h2 id="1-1、注册网站应用"><a href="#1-1、注册网站应用" class="headerlink" title="1.1、注册网站应用"></a>1.1、注册网站应用</h2><p><font color="red">注意:官网文档地址<a href="https://wiki.connect.qq.com/%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9%E5%9D%87%E5%8F%AF%E5%9C%A8%E6%96%87%E6%A1%A3%E4%B8%AD%E6%89%BE%E5%88%B0%E7%AD%94%E6%A1%88%E3%80%82">https://wiki.connect.qq.com/所有内容均可在文档中找到答案。</a></font></p><ul><li><p>登录qq开发者平台<a href="https://connect.qq.com/index.html">https://connect.qq.com/index.html</a></p><p><img src="https://images.hckun.cn/img/ROE3N0A%7DD8_G7A7MNE2Z6~4.png"></p></li><li><p>如果没有实名认证则需要提交信息进行实名认证,已认证则忽略</p><p><img src="https://images.hckun.cn/img/awertyuiol.png"></p></li><li><p>创建网站应用,填入相关的网站信息</p><p><img src="https://images.hckun.cn/img/784516546.png"></p><p><img src="https://images.hckun.cn/img/15487451254.png"></p></li><li><p>在网站的主页面添加qq登录图标,并把跳转地址链接到qq授权地址(<strong>否则审核不通过</strong>)</p><p>参考文档:<a href="https://wiki.connect.qq.com/%e6%94%be%e7%bd%aeqq%e7%99%bb%e5%bd%95%e6%8c%89%e9%92%ae_oauth2-0">https://wiki.connect.qq.com/%e6%94%be%e7%bd%aeqq%e7%99%bb%e5%bd%95%e6%8c%89%e9%92%ae_oauth2-0</a></p><p>代码示例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;/login&quot;</span>&gt;&lt;img th:src=<span class="string">&quot;@&#123;/static/images/qqLogin.png&#125;&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *跳转qq授权页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *参数说明:</span></span><br><span class="line"><span class="comment">    *response_type授权类型，此值固定为“code”</span></span><br><span class="line"><span class="comment">    *client_id      申请QQ登录成功后，分配给应用的appid</span></span><br><span class="line"><span class="comment">    *state          client端的状态值。用于第三方应用防止CSRF攻击，成功授权后回调时会原样带回。请务必严格按照流程检查用     *  户与state参数状态的绑定</span></span><br><span class="line"><span class="comment">    *redirect_uri  成功授权后的回调地址，必须是注册appid时填写的主域名下的地址，建议设置为网站首页或网站的用户中心。注意   需要将url进行URLEncode</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:https://graph.qq.com/oauth2.0/authorize?response_type=code&amp;client_id=*********&amp;state=&quot;</span>+ UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>) +<span class="string">&quot;&amp;redirect_uri=http%3A%2F%2Fwww.hckun.cn%2FqqLogin&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>等待审核成功</p><p><img src="http://images.hckun.cn/img/852653265.png"></p></li></ul><h2 id="2、接入QQ登录"><a href="#2、接入QQ登录" class="headerlink" title="2、接入QQ登录"></a>2、接入QQ登录</h2><p>​    <strong>在完成以上内容之后，下面就可以正式的接入QQ登录</strong></p><h3 id="2-1、环境搭建"><a href="#2-1、环境搭建" class="headerlink" title="2.1、环境搭建"></a>2.1、环境搭建</h3><ul><li><p>使用idea快速的搭建一个springbot项目，并导入相关的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">      <span class="comment">&lt;!--qqsdk--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.gplatform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Sdk4J<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--http--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpcore<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpasyncclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpmime<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--fastjson--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.73<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>首页</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--只是简单的放置了一个qq登录图标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/login&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/images/qqLogin.png&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转首页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toIndex</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *跳转qq授权页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *参数说明:</span></span><br><span class="line"><span class="comment">         *response_type 授权类型，此值固定为“code”</span></span><br><span class="line"><span class="comment">         *client_id      申请QQ登录成功后，分配给应用的appid</span></span><br><span class="line"><span class="comment">         *state          client端的状态值。用于第三方应用防止CSRF攻击，成功授权后回调时会原样带回。请务必严格按照流程                           检查用户与state参数状态的绑定</span></span><br><span class="line"><span class="comment">         *redirect_uri  成功授权后的回调地址，必须是注册appid时填写的主域名下的地址，建议设置为网站首页或网站的用户中心。注意需要将url进行URLEncode</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:https://graph.qq.com/oauth2.0/authorize?response_type=code&amp;client_id=101951053&amp;state=&quot;</span>+ UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>) +<span class="string">&quot;&amp;redirect_uri=http%3A%2F%2Fwww.hckun.cn%2FqqLogin&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>HTTP请求工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PoolingHttpClientConnectionManager connMgr;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig requestConfig;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_TIMEOUT</span> <span class="operator">=</span> <span class="number">7000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(HttpUtil.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 设置连接池</span></span><br><span class="line">        connMgr = <span class="keyword">new</span> <span class="title class_">PoolingHttpClientConnectionManager</span>();</span><br><span class="line">        <span class="comment">// 设置连接池大小</span></span><br><span class="line">        connMgr.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">        connMgr.setDefaultMaxPerRoute(connMgr.getMaxTotal());</span><br><span class="line">        <span class="comment">// Validate connections after 1 sec of inactivity</span></span><br><span class="line">        connMgr.setValidateAfterInactivity(<span class="number">1000</span>);</span><br><span class="line">        RequestConfig.<span class="type">Builder</span> <span class="variable">configBuilder</span> <span class="operator">=</span> RequestConfig.custom();</span><br><span class="line">        <span class="comment">// 设置连接超时</span></span><br><span class="line">        configBuilder.setConnectTimeout(MAX_TIMEOUT);</span><br><span class="line">        <span class="comment">// 设置读取超时</span></span><br><span class="line">        configBuilder.setSocketTimeout(MAX_TIMEOUT);</span><br><span class="line">        <span class="comment">// 设置从连接池获取连接实例的超时</span></span><br><span class="line">        configBuilder.setConnectionRequestTimeout(MAX_TIMEOUT);</span><br><span class="line"></span><br><span class="line">        requestConfig = configBuilder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送 GET 请求（HTTP），不带输入数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> doGet(url, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送 GET 请求（HTTP），K-V形式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">apiUrl</span> <span class="operator">=</span> url;</span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                param.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                param.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            param.append(key).append(<span class="string">&quot;=&quot;</span>).append(params.get(key));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        apiUrl += param;</span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (apiUrl.startsWith(<span class="string">&quot;https&quot;</span>)) &#123;</span><br><span class="line">            httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class="line">                    .setConnectionManager(connMgr).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            httpClient = HttpClients.createDefault();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(apiUrl);</span><br><span class="line">            <span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpGet);</span><br><span class="line">            <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">            <span class="keyword">if</span> (entity != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">InputStream</span> <span class="variable">instream</span> <span class="operator">=</span> entity.getContent();</span><br><span class="line">                result = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(instream)).lines().collect(Collectors.joining(System.lineSeparator()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            logger.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送 POST 请求（HTTP），不带输入数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> apiUrl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String apiUrl)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> doPost(apiUrl, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送 POST 请求，K-V形式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> apiUrl API接口URL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 参数map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String apiUrl, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (apiUrl.startsWith(<span class="string">&quot;https&quot;</span>)) &#123;</span><br><span class="line">            httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class="line">                    .setConnectionManager(connMgr).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            httpClient = HttpClients.createDefault();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">httpStr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(apiUrl);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            httpPost.setConfig(requestConfig);</span><br><span class="line">            List&lt;NameValuePair&gt; pairList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(params.size());</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : params.entrySet()) &#123;</span><br><span class="line">                <span class="type">NameValuePair</span> <span class="variable">pair</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(entry.getKey(), entry.getValue().toString());</span><br><span class="line">                pairList.add(pair);</span><br><span class="line">            &#125;</span><br><span class="line">            httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(pairList, Charset.forName(<span class="string">&quot;UTF-8&quot;</span>)));</span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line">            <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">            httpStr = EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            logger.error(e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    EntityUtils.consume(response.getEntity());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    logger.error(e.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> httpStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送 POST 请求，JSON形式</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> apiUrl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json   json对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String apiUrl, Object json)</span> &#123;</span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (apiUrl.startsWith(<span class="string">&quot;https&quot;</span>)) &#123;</span><br><span class="line">            httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class="line">                    .setConnectionManager(connMgr).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            httpClient = HttpClients.createDefault();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">httpStr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(apiUrl);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            httpPost.setConfig(requestConfig);</span><br><span class="line">            <span class="type">StringEntity</span> <span class="variable">stringEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(json.toString(), <span class="string">&quot;UTF-8&quot;</span>);<span class="comment">// 解决中文乱码问题</span></span><br><span class="line">            stringEntity.setContentEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            stringEntity.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">            httpPost.setEntity(stringEntity);</span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line">            <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">            httpStr = EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            logger.error(e.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    EntityUtils.consume(response.getEntity());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    logger.error(e.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> httpStr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建SSL安全连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SSLConnectionSocketFactory <span class="title function_">createSSLConnSocketFactory</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SSLConnectionSocketFactory</span> <span class="variable">sslsf</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">SSLContext</span> <span class="variable">sslContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SSLContextBuilder</span>().loadTrustMaterial(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">TrustStrategy</span>() &#123;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isTrusted</span><span class="params">(X509Certificate[] chain, String authType)</span> <span class="keyword">throws</span> CertificateException &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).build();</span><br><span class="line">            sslsf = <span class="keyword">new</span> <span class="title class_">SSLConnectionSocketFactory</span>(sslContext, <span class="keyword">new</span> <span class="title class_">HostnameVerifier</span>() &#123;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">verify</span><span class="params">(String arg0, SSLSession arg1)</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (GeneralSecurityException e) &#123;</span><br><span class="line">            logger.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sslsf;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*gitHub开始*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送get请求，利用java代码发送请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGetHub</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpclient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">        <span class="comment">// 发送了一个http请求</span></span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpclient.execute(httpGet);</span><br><span class="line">        <span class="comment">// 如果响应200成功,解析响应结果</span></span><br><span class="line">        <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取响应的内容</span></span><br><span class="line">            <span class="type">HttpEntity</span> <span class="variable">responseEntity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> EntityUtils.toString(responseEntity);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将字符串转换成map</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> responseEntity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title function_">getMap</span><span class="params">(String responseEntity)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 以&amp;来解析字符串</span></span><br><span class="line">        String[] result = responseEntity.split(<span class="string">&quot;\\&amp;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String str : result) &#123;</span><br><span class="line">            <span class="comment">// 以=来解析字符串</span></span><br><span class="line">            String[] split = str.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">            <span class="comment">// 将字符串存入map中</span></span><br><span class="line">            <span class="keyword">if</span> (split.length == <span class="number">1</span>) &#123;</span><br><span class="line">                map.put(split[<span class="number">0</span>], <span class="literal">null</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(split[<span class="number">0</span>], split[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过json获得map</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> responseEntity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title function_">getMapByJson</span><span class="params">(String responseEntity)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 阿里巴巴fastjson  将json转换成map</span></span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(responseEntity);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : jsonObject.entrySet()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">            <span class="comment">// 将obj转换成string</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> String.valueOf(entry.getValue());</span><br><span class="line">            map.put(key, value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>点击登录图标跳转到授权页面</p><p><img src="http://images.hckun.cn/img/6545152656.png"></p></li></ul><p>​    </p><h3 id="2-2、通过Authorization-Code获取Access-Token"><a href="#2-2、通过Authorization-Code获取Access-Token" class="headerlink" title="2.2、通过Authorization Code获取Access Token"></a>2.2、通过Authorization Code获取Access Token</h3><p>​    在用户授权完成之后会回调我们申请时填写的<strong>网站回调域</strong>中的地址，进入该回调方法，并返回code和state</p><p>​    例如：<a href="http://www.hckun.cn/qqLogin?code=A373E96D30BF02A9EA546270D9A5BE86&amp;state=3b509b07f2b3477ca4828c4a8ff09112">http://www.hckun.cn/qqLogin?code=A373E96D30BF02A9EA546270D9A5BE86&amp;state=3b509b07f2b3477ca4828c4a8ff09112</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  *qq授权成功回调页面</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="meta">@RequestMapping(&quot;/qqLogin&quot;)</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">qqLogin</span><span class="params">(String code,  Model model)</span>&#123;</span><br><span class="line">     <span class="comment">//封装请求获取Access Token的请求参数,请求地址:https://graph.qq.com/oauth2.0/token</span></span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * grant_type 授权类型，在本步骤中，此值为“authorization_code”</span></span><br><span class="line"><span class="comment">      * client_id  申请QQ登录成功后，分配给网站的appid</span></span><br><span class="line"><span class="comment">      * client_secret 申请QQ登录成功后，分配给网站的appkey</span></span><br><span class="line"><span class="comment">      * code 上一步返回的authorization code 如果用户成功登录并授权，则会跳转到指定的回调地址，并在URL中带上Authorization Code</span></span><br><span class="line"><span class="comment">      * redirect_uri 与上面一步中传入的redirect_uri保持一致</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">     Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">     map.put(<span class="string">&quot;grant_type&quot;</span>,<span class="string">&quot;authorization_code&quot;</span>);</span><br><span class="line">     map.put(<span class="string">&quot;client_id&quot;</span>,<span class="string">&quot;*******10**53&quot;</span>);</span><br><span class="line">     map.put(<span class="string">&quot;client_secret&quot;</span>,<span class="string">&quot;****************22549d8fd&quot;</span>);</span><br><span class="line">     map.put(<span class="string">&quot;code&quot;</span>,code);</span><br><span class="line">     map.put(<span class="string">&quot;redirect_uri&quot;</span>,<span class="string">&quot;http%3A%2F%2Fwww.hckun.cn%2FqqLogin&quot;</span>);</span><br><span class="line">     <span class="comment">//发送请求 通过授权返回的Authorization Code获取Access Token</span></span><br><span class="line">     <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> HttpUtil.doGet(<span class="string">&quot;https://graph.qq.com/oauth2.0/token&quot;</span>, map);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;main&quot;</span>;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>请求成功返回示例:access_token=*<em><strong><strong><strong><strong>12A843D</strong></strong></strong></strong></em>**7EA77E7&amp;expires_in=7776000&amp;refresh_token=</p><p>32C<em>32AE</em>*****************。对返回的数据进行分隔存入map集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String,String&gt; res = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       String[] split = result.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (String s : split) &#123;</span><br><span class="line">           String[] strings = s.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">          res.put(strings[<span class="number">0</span>],strings[<span class="number">1</span>]);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h3 id="2-3、获取用户OpenID-OAuth2-0"><a href="#2-3、获取用户OpenID-OAuth2-0" class="headerlink" title="2.3、获取用户OpenID_OAuth2.0"></a>2.3、获取用户OpenID_OAuth2.0</h3><p>​    通过3.2获取的access_token来换取用户的openid</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//通过获取的Access Token换取用户的OpenId 请求地址:https://graph.qq.com/oauth2.0/me</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参数:access_token在3.2中获取到的access token</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">oppenIdString</span> <span class="operator">=</span> HttpUtil.doGet(<span class="string">&quot;https://graph.qq.com/oauth2.0/me?access_token=&quot;</span> + res.get(<span class="string">&quot;access_token&quot;</span>));</span><br></pre></td></tr></table></figure><p>返回示例:callback( {“client_id”:”<strong><strong><strong>053”,”openid”:”523</strong></strong></strong>55CB******2C”} );</p><p>截取出我们想要的openid的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//截取出openid</span></span><br><span class="line"><span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(oppenIdString.substring(oppenIdString.indexOf(<span class="string">&quot;(&quot;</span>)+<span class="number">1</span>,oppenIdString.lastIndexOf(<span class="string">&quot;)&quot;</span>)));</span><br><span class="line"><span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> (String) jsonObject.get(<span class="string">&quot;openid&quot;</span>);</span><br></pre></td></tr></table></figure><p><font color="red">OpenID是此网站上或应用中唯一对应用户身份的标识，网站或应用可将此ID进行存储，便于用户下次登录时辨识其身份，或将其与用户在网站上或应用中的原有账号进行绑定</font></p><h3 id="2-4、OpenAPI调用获取用户信息"><a href="#2-4、OpenAPI调用获取用户信息" class="headerlink" title="2.4、OpenAPI调用获取用户信息"></a>2.4、OpenAPI调用获取用户信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用openid获取用户信息 请求地址:https://graph.qq.com/user/get_user_info</span></span><br><span class="line"><span class="comment">//封装请求参数</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * access_token 之前获取的access_token</span></span><br><span class="line"><span class="comment"> * oauth_consumer_key 申请QQ登录成功后，分配给应用的appid</span></span><br><span class="line"><span class="comment"> * openid 用户的ID，与QQ号码一一对应</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Map&lt;String,Object&gt; userMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">userMap.put(<span class="string">&quot;access_token&quot;</span>,res.get(<span class="string">&quot;access_token&quot;</span>));</span><br><span class="line">userMap.put(<span class="string">&quot;openid&quot;</span>,openid);</span><br><span class="line">userMap.put(<span class="string">&quot;oauth_consumer_key&quot;</span>,<span class="string">&quot;101951053&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">userInfo</span> <span class="operator">=</span> HttpUtil.doGet(<span class="string">&quot;https://graph.qq.com/user/get_user_info&quot;</span>, userMap);</span><br></pre></td></tr></table></figure><p>返回示例:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--参数列表<span class="punctuation">:</span>--&gt;</span><br><span class="line">&lt;!--private String ret; <span class="comment">//返回码--&gt;</span></span><br><span class="line">&lt;!--private String msg; <span class="comment">//如果ret&lt;0，会有相应的错误信息提示，返回数据全部用UTF-8编码。--&gt;</span></span><br><span class="line">&lt;!--private String nickname; <span class="comment">//用户在QQ空间的昵称。--&gt;</span></span><br><span class="line">&lt;!--private String figureurl; <span class="comment">//大小为30×30像素的QQ空间头像URL。--&gt;</span></span><br><span class="line">&lt;!--private String figureurl_1; <span class="comment">//大小为50×50像素的QQ空间头像URL。--&gt;</span></span><br><span class="line">&lt;!--private String figureurl_2; <span class="comment">//大小为100×100像素的QQ空间头像URL。--&gt;</span></span><br><span class="line">&lt;!--private String figureurl_qq_1; <span class="comment">//大小为40×40像素的QQ头像URL。--&gt;</span></span><br><span class="line">&lt;!--private String figureurl_qq_2; <span class="comment">//大小为100×100像素的QQ头像URL。需要注意，不是所有的用户都拥有QQ的100x100的头像，但40x40像素则是一定会有。--&gt;</span></span><br><span class="line">&lt;!--private String gender; <span class="comment">//性别。 如果获取不到则默认返回&quot;男&quot;--&gt;</span></span><br><span class="line">&lt;!--private Integer gendertype; <span class="comment">// 性别 数字--&gt;</span></span><br><span class="line">&lt;!--private String is_yellow_vip; <span class="comment">//标识用户是否为黄钻用户（0：不是；1：是）。--&gt;</span></span><br><span class="line">&lt;!--private String vip; <span class="comment">//标识用户是否为黄钻用户（0：不是；1：是）--&gt;</span></span><br><span class="line">&lt;!--private String yellow_vip_level; <span class="comment">//黄钻等级--&gt;</span></span><br><span class="line">&lt;!--private String level; <span class="comment">//黄钻等级--&gt;</span></span><br><span class="line">&lt;!--private String is_yellow_year_vip; <span class="comment">//标识是否为年费黄钻用户（0：不是； 1：是）--&gt;</span></span><br><span class="line">&lt;!--private String province; <span class="comment">// 省--&gt;</span></span><br><span class="line">&lt;!--private String city; <span class="comment">// 市--&gt;</span></span><br><span class="line">JSON示例<span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;ret&quot;</span><span class="punctuation">:</span><span class="number">0</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span><span class="string">&quot;Peter&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;figureurl&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://qzapp.qlogo.cn/qzapp/111111/942FEA70050EEAFBD4DCE2C1FC775E56/30&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;figureurl_1&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://qzapp.qlogo.cn/qzapp/111111/942FEA70050EEAFBD4DCE2C1FC775E56/50&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;figureurl_2&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://qzapp.qlogo.cn/qzapp/111111/942FEA70050EEAFBD4DCE2C1FC775E56/100&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;figureurl_qq_1&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://q.qlogo.cn/qqapp/100312990/DE1931D5330620DBD07FB4A5422917B6/40&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;figureurl_qq_2&quot;</span><span class="punctuation">:</span><span class="string">&quot;http://q.qlogo.cn/qqapp/100312990/DE1931D5330620DBD07FB4A5422917B6/100&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span><span class="string">&quot;男&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;is_yellow_vip&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;vip&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;yellow_vip_level&quot;</span><span class="punctuation">:</span><span class="string">&quot;7&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;level&quot;</span><span class="punctuation">:</span><span class="string">&quot;7&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;is_yellow_year_vip&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>跳转到获取信息页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">JSONObject</span> <span class="variable">user</span> <span class="operator">=</span> JSONObject.parseObject(userInfo);</span><br><span class="line">   System.out.println(user);</span><br><span class="line">   model.addAttribute(<span class="string">&quot;user&quot;</span>,user);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;main&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="2-5、展示获取到的用户信息"><a href="#2-5、展示获取到的用户信息" class="headerlink" title="2.5、展示获取到的用户信息"></a>2.5、展示获取到的用户信息</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>获取用户信息<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;用户名称 :&#x27; + $&#123;user.nickname&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    用户头像:</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;user.figureurl_qq_1&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;user.figureurl_qq_1&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;user.figureurl_qq_2&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    性别:</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.gender&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.vip&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.yellow_vip_level&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.is_yellow_year_vip&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.province&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.city&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://images.hckun.cn/img/896532365986532.png"></p><blockquote><center>对接QQ登录完结</center></blockquote>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API对接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis-Plus</title>
      <link href="/post/1276cc28.html"/>
      <url>/post/1276cc28.html</url>
      
        <content type="html"><![CDATA[<h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><h3 id="1-1、什么是Mybatis-Plus"><a href="#1-1、什么是Mybatis-Plus" class="headerlink" title="1.1、什么是Mybatis-Plus"></a>1.1、什么是Mybatis-Plus</h3><p><a href="https://github.com/baomidou/mybatis-plus">MyBatis-Plus (opens new window)</a>（简称 MP）是一个 <a href="http://www.mybatis.org/mybatis-3/">MyBatis (opens new window)</a>的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><p>API文档地址：<a href="https://mp.baomidou.com/guide/">https://mp.baomidou.com/guide/</a></p><p><img src="https://images.hckun.cn/img/58763554.png"></p><h3 id="1-2、特性"><a href="#1-2、特性" class="headerlink" title="1.2、特性"></a>1.2、特性</h3><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li><li><strong>支持数据库：</strong>任何能使用 <code>mybatis</code> 进行 crud, 并且支持标准 sql 的数据库</li></ul><h3 id="1-3、框架结构"><a href="#1-3、框架结构" class="headerlink" title="1.3、框架结构"></a>1.3、框架结构</h3><p><img src="https://images.hckun.cn/img/7863568.png"></p><h2 id="2、快速开始"><a href="#2、快速开始" class="headerlink" title="2、快速开始"></a>2、快速开始</h2><ul><li><p><strong>创建数据库表user并导入数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span></span><br><span class="line">(</span><br><span class="line">id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">bitrh datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span> (id, name, age, birth) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;2000-05-05&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;1999-10-01&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;20001-02-20&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;1998-07-15&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;2002-06-05&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>使用idea快速创建SpringBoot项目,并引入相关依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--mybatisplus--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>application.properties</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#连接数据库</span></span><br><span class="line"><span class="attr">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/demo?useSSL=false&amp;serverTimezone=GMT%2B8&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="comment">#标准日志输出</span></span><br><span class="line"><span class="attr">mybatis-plus.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure></li><li><p><strong>实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>dao</strong></p><p>Mybatis-Plus在dao层去继承BaseMapper,所有的CRUD操作都已经帮我们生成成功,不用像以前那样我们自己去接口,写完接口再去写mapper文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>主启动类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.example.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MybatisPlusApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MybatisPlusApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//查询全部</span></span><br><span class="line">        List&lt;User&gt; users = userDao.selectList(<span class="literal">null</span>);</span><br><span class="line">        users.stream().forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">getOne</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//查询一个</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.selectById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="comment">//user.setId(6);</span></span><br><span class="line">        user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">20</span>);</span><br><span class="line">        user.setBirth(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">int</span> <span class="variable">insert</span> <span class="operator">=</span> userDao.insert(user);</span><br><span class="line">        System.out.println(<span class="string">&quot;添加成功&quot;</span> + insert);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> <span class="keyword">throws</span> ParseException &#123;</span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="comment">//直接修改,如果只修改部分字段,那么其他的字段会按照实体类的默认值进行修改</span></span><br><span class="line">        user.setId(<span class="number">8</span>);</span><br><span class="line">        user.setName(<span class="string">&quot;李华&quot;</span>);</span><br><span class="line">        user.setAge(<span class="number">20</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.updateById(user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//所以我们先进行查询,查询完之后在进行修改,这样就可以避免上述问题</span></span><br><span class="line">      <span class="comment">/*  User user1 = userDao.selectById(6);</span></span><br><span class="line"><span class="comment">        user1.setName(&quot;小明&quot;);</span></span><br><span class="line"><span class="comment">        user1.setAge(15);</span></span><br><span class="line"><span class="comment">        user1.setBirth(new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).parse(&quot;2000-05-05&quot;));</span></span><br><span class="line"><span class="comment">        int i = userDao.updateById(user1);*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;修改成功:&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteOne</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//删除单个</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.deleteById(<span class="string">&quot;6&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除成功:&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteBatch</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//批量删除</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.deleteBatchIds(Arrays.asList(<span class="number">6</span>, <span class="number">7</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;批量删除成功:&quot;</span> + i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3、核心功能"><a href="#3、核心功能" class="headerlink" title="3、核心功能"></a>3、核心功能</h2><h3 id="3-1、主键生成策略"><a href="#3-1、主键生成策略" class="headerlink" title="3.1、主键生成策略"></a>3.1、主键生成策略</h3><p>  Mybatis-plus支持的常用主键生成策略有</p><ol><li>AUTO(0), // 数据库id自增</li><li>NONE(1), // 未设置主键</li><li>INPUT(2), // 手动输入</li><li>ID_WORKER(3), // 默认的全局唯一id</li><li>UUID(4), // 全局唯一id uuid</li><li>UUID(4), // 全局唯一id uuid</li></ol><p>  我们以主键自增策略为例进行演示</p><ul><li><p><strong>首先设置数据库id为自增</strong></p></li><li><p><strong>在实体类User中，给主键增加@Table@TableId(type = IdType.AUTO)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line">   <span class="keyword">private</span> <span class="type">int</span> id;</span><br></pre></td></tr></table></figure></li><li><p><strong>测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//添加</span></span><br><span class="line">      <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">      <span class="comment">//user.setId(6);</span></span><br><span class="line">      user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">      user.setAge(<span class="number">20</span>);</span><br><span class="line">      user.setBirth(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">      <span class="type">int</span> <span class="variable">insert</span> <span class="operator">=</span> userDao.insert(user);</span><br><span class="line">      System.out.println(<span class="string">&quot;添加成功&quot;</span> + insert);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>我们在添加数据的时候,不用设置主键id,会在我们添加数据的时候自动主键自增。</p></li></ul><h3 id="3-2、自动填充"><a href="#3-2、自动填充" class="headerlink" title="3.2、自动填充"></a>3.2、自动填充</h3><p>我们通常一张数据库表，都会存在创建时间和修改时间的字段，之前的做法我们通常是通过程序参数参数或者数据库进行配置，使用了Mybatis-Plus之后我们只需进行简单的配置，即可在执行添加、修改操作时自动的为我们填充这两个字段的数据。</p><ul><li><p><strong>数据库添加创建时间（create_date）和修改时间(update_date)字段,数据类型为datetime</strong></p></li><li><p><strong>实体类增加字段信息并添加相应注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建时间</span></span><br><span class="line">  <span class="comment">//标记为创建填充字段</span></span><br><span class="line">  <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">  <span class="keyword">private</span> Date createDate;</span><br><span class="line">  <span class="comment">//修改时间</span></span><br><span class="line">  <span class="comment">//标记为更新填充字段</span></span><br><span class="line">  <span class="meta">@TableField(fill=FieldFill.INSERT_UPDATE)</span></span><br><span class="line">  <span class="keyword">private</span> Date updateDate;</span><br></pre></td></tr></table></figure></li><li><p><strong>编写处理器来处理这些注解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">//插入时执行</span></span><br><span class="line">        log.info(<span class="string">&quot;执行了插入操作&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;createDate&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateDate&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="comment">//更新时执行</span></span><br><span class="line">        log.info(<span class="string">&quot;执行了更新操作&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateDate&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>测试插入、修改观察创建时间和更新时间</strong></p></li></ul><h3 id="3-3、乐观锁"><a href="#3-3、乐观锁" class="headerlink" title="3.3、乐观锁"></a>3.3、乐观锁</h3><p>乐观锁(OptimisticLockerInnerInterceptor),乐观锁所要做的就是<strong>当要更新一条记录的时候，希望这条记录没有被别人更新</strong></p><p>乐观锁实现方式:</p><ol><li>取出记录时，获取当前version</li><li>更新时，带上这个version</li><li>执行更新时， set version = newVersion where version = oldVersion</li><li>如果version不对，就更新失败</li></ol><p><strong>实例</strong></p><ul><li><p><strong>数据库添加version字段,默认值为0</strong></p></li><li><p><strong>实体类增加version字段</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//乐观锁字段</span></span><br><span class="line">  <span class="meta">@Version</span></span><br><span class="line">  <span class="keyword">private</span>  Integer version;</span><br></pre></td></tr></table></figure></li><li><p><strong>注册乐观锁插件</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.example.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    <span class="comment">//注册乐观锁插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OptimisticLockerInterceptor <span class="title function_">optimisticLockerInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OptimisticLockerInterceptor</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>测试乐观锁</strong></p><ol><li><p>成功案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">version</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//查询用户信息</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.selectById(<span class="number">9</span>);</span><br><span class="line">       <span class="comment">//修改用户信息</span></span><br><span class="line">       user.setName(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">20</span>);</span><br><span class="line">       <span class="comment">//执行更新操作</span></span><br><span class="line">       userDao.updateById(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://images.hckun.cn/img/5428765368.png"></p><p>查询是会将version信息查询出来,更新时会将查询的version作为判断条件,不符合更新失败。如果符合则会更新成功，并将version的值加1</p></li><li><p>模拟多线程失败案例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">threadVersion</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//线程1去进行修改用户</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> userDao.selectById(<span class="number">9</span>);</span><br><span class="line">       user1.setName(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">       <span class="comment">//模拟另外一个线程抢先完成更新操作</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> userDao.selectById(<span class="number">10</span>);</span><br><span class="line">       user2.setName(<span class="string">&quot;jerry&quot;</span>);</span><br><span class="line">       userDao.updateById(user2);</span><br><span class="line">     </span><br><span class="line">       <span class="comment">//线程1提交更新操作</span></span><br><span class="line">       userDao.updateById(user1);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>由于线程2抢先于线程1更新成功,将version的值进行了修改,而此时线程1拿到的version值是修改之前的,故线程1再去更新的时候version不配,更新失败。</p></li></ol></li></ul><h3 id="3-4、查询操作"><a href="#3-4、查询操作" class="headerlink" title="3.4、查询操作"></a>3.4、查询操作</h3><ul><li><p><strong>单个查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">findById</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//根据id查询</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.selectById(<span class="number">8</span>);</span><br><span class="line">       System.out.println(user);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>批量查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">batchFind</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//批量查询</span></span><br><span class="line">        List&lt;User&gt; users = userDao.selectBatchIds(Arrays.asList(<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>));</span><br><span class="line">        users.stream().forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>根据指定字段查询</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">mapFind</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//使用map按指定条件查询</span></span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;age&quot;</span>, <span class="number">28</span>);</span><br><span class="line">        List&lt;User&gt; users = userDao.selectByMap(map);</span><br><span class="line">        users.stream().forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-5、分页查询"><a href="#3-5、分页查询" class="headerlink" title="3.5、分页查询"></a>3.5、分页查询</h3><p>使用Mybatis-plus的内置分页插件</p><ul><li><p><strong>注册分页插件</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分页插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">PaginationInterceptor</span> <span class="variable">paginationInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">        <span class="comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setOverflow(false);</span></span><br><span class="line">        <span class="comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setLimit(500);</span></span><br><span class="line">        <span class="comment">// 开启 count 的 join 优化,只针对部分 left join</span></span><br><span class="line">        <span class="comment">//paginationInterceptor.setCountSqlParser(new JsqlParserCountOptimize(true));</span></span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>分页查询数据</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">pagefind</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//分页查询</span></span><br><span class="line">       <span class="comment">//参数一:当前页 参数二:页面大小</span></span><br><span class="line">        Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">         Page&lt;User&gt; userPage = userDao.selectPage(page, <span class="literal">null</span>);</span><br><span class="line">        List&lt;User&gt; users = userPage.getRecords();</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-6、删除操作"><a href="#3-6、删除操作" class="headerlink" title="3.6、删除操作"></a>3.6、删除操作</h3><ul><li><p><strong>单个删除</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//根据id删除</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.deleteById(<span class="number">7</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除成功:&quot;</span> + i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>批量删除</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">batchDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//批量删除</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.deleteBatchIds(Arrays.asList(<span class="number">5</span>, <span class="number">6</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;批量删除成功:&quot;</span> + i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>指定字段删除</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">void</span> <span class="title function_">mapDelete</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//通过map自定义删除条件</span></span><br><span class="line">      HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">      map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">      map.put(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>);</span><br><span class="line">      <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.deleteByMap(map);</span><br><span class="line">      System.out.println(<span class="string">&quot;删除成功:&quot;</span> + i);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-7、逻辑删除"><a href="#3-7、逻辑删除" class="headerlink" title="3.7、逻辑删除"></a>3.7、逻辑删除</h3><p>所谓逻辑删除，并不是真的删除数据，而是修改数据的状态，数据仍在数据库中。通俗的说就是删除不是执行的delete，而是执行的update。</p><ul><li><p><strong>数据库新增deleted字段，默认值为0</strong></p></li><li><p><strong>实体类新增deleted字段</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//逻辑删除</span></span><br><span class="line">  <span class="meta">@TableLogic</span></span><br><span class="line">  <span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure></li><li><p><strong>SpringBoot配置文件中进行配置</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置逻辑删除</span></span><br><span class="line"><span class="comment">#全局逻辑删除的实体字段名</span></span><br><span class="line"><span class="attr">mybatis-plus.global-config.db-config.logic-delete-field</span>=<span class="string">deleted</span></span><br><span class="line"><span class="comment">#逻辑已删除值(默认为1)</span></span><br><span class="line"><span class="attr">mybatis-plus.global-config.db-config.logic-delete-value</span>=<span class="string">1</span></span><br><span class="line"><span class="comment">#逻辑未删除值(默认为0)</span></span><br><span class="line"><span class="attr">mybatis-plus.global-config.db-config.logic-not-delete-value</span>=<span class="string">0</span></span><br></pre></td></tr></table></figure></li><li><p><strong>测试逻辑删除</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">logicDelete</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//逻辑删除</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.deleteById(<span class="number">13</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;受影响的行数:&quot;</span> + i);</span><br><span class="line">  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="https://images.hckun.cn/img/758635689.png"></p><p>  再次进行查询时会默认的不去查询已经删除的数据(deleted字段为1的数据)</p></li></ul><h3 id="3-8、性能分析插件"><a href="#3-8、性能分析插件" class="headerlink" title="3.8、性能分析插件"></a>3.8、性能分析插件</h3><p>Mybatis-Plus内置的性能分析插件可以帮我们去检测每条sql的执行时间，以及设置最大执行时间如果超过该时间则会抛出异常。</p><ul><li><p><strong>注册插件</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sql执行效率插件</span></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">  <span class="comment">// @Profile(&#123;&quot;dev&quot;,&quot;test&quot;&#125;)// 设置 dev test 环境开启，保证我们的效率</span></span><br><span class="line">   <span class="keyword">public</span> PerformanceInterceptor <span class="title function_">performanceInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">PerformanceInterceptor</span> <span class="variable">performanceInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span></span><br><span class="line">               <span class="title class_">PerformanceInterceptor</span>();</span><br><span class="line">       performanceInterceptor.setMaxTime(<span class="number">100</span>); <span class="comment">// ms设置sql执行的最大时间，如果超过了则不执行</span></span><br><span class="line">  </span><br><span class="line">       performanceInterceptor.setFormat(<span class="literal">true</span>); <span class="comment">// 是否格式化代码</span></span><br><span class="line">       <span class="keyword">return</span> performanceInterceptor;</span><br><span class="line">   &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p><strong>发送sql测试</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">performance</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;User&gt; users = userDao.selectList(<span class="literal">null</span>);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://images.hckun.cn/img/4786345.png"></p></li></ul><h3 id="3-9、条件构造器"><a href="#3-9、条件构造器" class="headerlink" title="3.9、条件构造器"></a>3.9、条件构造器</h3><p>条件构造器可以让我们去写一些比较复杂的sql语句，通过调用方法来拼接我们所需要的sql语句。</p><p><img src="https://images.hckun.cn/img/875783.png"></p><p>我们以其中的几个为例进行测试</p><ul><li><p><strong>test1</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">wrapper1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//查询姓名、生日不为空、年龄大于12的用户</span></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper</span><br><span class="line">                .isNotNull(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">                .isNotNull(<span class="string">&quot;birth&quot;</span>)</span><br><span class="line">                .ge(<span class="string">&quot;age&quot;</span>, <span class="number">12</span>);</span><br><span class="line">        List&lt;User&gt; users = userDao.selectList(queryWrapper);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>test2</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">wrapper2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//根据名字查询</span></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper</span><br><span class="line">                .eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;tom&quot;</span>);</span><br><span class="line">        <span class="comment">//查询一个</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.selectOne(queryWrapper);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        <span class="comment">//查询多个</span></span><br><span class="line">        List&lt;User&gt; users = userDao.selectList(queryWrapper);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>test3</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">wrapper3</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//查询年龄在19-20之间的用户</span></span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       queryWrapper</span><br><span class="line">               .between(<span class="string">&quot;age&quot;</span>, <span class="number">19</span>, <span class="number">20</span>);</span><br><span class="line">       <span class="comment">//查询多个</span></span><br><span class="line">       List&lt;User&gt; users = userDao.selectList(queryWrapper);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>test4</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">wrapper4</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//模糊查询</span></span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       <span class="comment">//LIKE &#x27;%值%&#x27;    likeLeft &#x27;%值&#x27;    likeRight  &#x27;值%&#x27;</span></span><br><span class="line">       queryWrapper</span><br><span class="line">               .like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;e&quot;</span>);</span><br><span class="line">       <span class="comment">//查询多个</span></span><br><span class="line">       List&lt;User&gt; users = userDao.selectList(queryWrapper);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>test5</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">wrapper5</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//子查询</span></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//查询年龄大于18的数据</span></span><br><span class="line">        queryWrapper</span><br><span class="line">                .inSql(<span class="string">&quot;age&quot;</span>, <span class="string">&quot;select age from mp where age &gt; 18&quot;</span>);</span><br><span class="line">        <span class="comment">//查询多个</span></span><br><span class="line">        List&lt;Object&gt; users = userDao.selectObjs(queryWrapper);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>test6</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">wrapper6</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="comment">//排序</span></span><br><span class="line">       QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">       <span class="comment">//按年龄降序查询</span></span><br><span class="line">       queryWrapper</span><br><span class="line">               .orderByDesc(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">       <span class="comment">//查询多个</span></span><br><span class="line">       List&lt;User&gt; users = userDao.selectList(queryWrapper);</span><br><span class="line">       users.forEach(System.out::println);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4、自动生成器"><a href="#4、自动生成器" class="headerlink" title="4、自动生成器"></a>4、自动生成器</h2><p>为了提高开发的效率Mybatis-Plus为我们提供代码生成器，可以根据数据库表为我们自动的生成实体类、dao、service、controller</p><ul><li><p><strong>添加依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 模板引擎 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>编写自动生成类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      <span class="comment">// 需要构建一个 代码自动生成器 对象</span></span><br><span class="line">      <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">      <span class="comment">// 配置策略</span></span><br><span class="line">      <span class="comment">// 1、全局配置</span></span><br><span class="line">      <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">      <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">      gc.setOutputDir(projectPath + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">      gc.setAuthor(<span class="string">&quot;hckun&quot;</span>);</span><br><span class="line">      gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">      gc.setFileOverride(<span class="literal">false</span>); <span class="comment">// 是否覆盖</span></span><br><span class="line">      gc.setServiceName(<span class="string">&quot;%sService&quot;</span>); <span class="comment">// 去Service的I前缀</span></span><br><span class="line">      gc.setIdType(IdType.ID_WORKER);</span><br><span class="line">      gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">      gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">      mpg.setGlobalConfig(gc);</span><br><span class="line">      <span class="comment">//2、设置数据源</span></span><br><span class="line">      <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">      dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/demo?useSSL=false&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">      dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">      dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">      dsc.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">      dsc.setDbType(DbType.MYSQL);</span><br><span class="line">      mpg.setDataSource(dsc);</span><br><span class="line">      <span class="comment">//3、包的配置</span></span><br><span class="line">      <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">      pc.setModuleName(<span class="string">&quot;blog&quot;</span>);</span><br><span class="line">      pc.setParent(<span class="string">&quot;cn.hckun&quot;</span>);</span><br><span class="line">      pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">      pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">      pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">      pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">      mpg.setPackageInfo(pc);</span><br><span class="line">      <span class="comment">//4、策略配置</span></span><br><span class="line">      <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">      strategy.setInclude(<span class="string">&quot;mp&quot;</span>); <span class="comment">// 设置要映射的表名</span></span><br><span class="line">      strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">      strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">      strategy.setEntityLombokModel(<span class="literal">true</span>); <span class="comment">// 自动lombok；</span></span><br><span class="line">      strategy.setLogicDeleteFieldName(<span class="string">&quot;deleted&quot;</span>);</span><br><span class="line">      <span class="comment">// 自动填充配置</span></span><br><span class="line">      <span class="type">TableFill</span> <span class="variable">gmtCreate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableFill</span>(<span class="string">&quot;create_date&quot;</span>, FieldFill.INSERT);</span><br><span class="line">      <span class="type">TableFill</span> <span class="variable">gmtModified</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableFill</span>(<span class="string">&quot;update_date&quot;</span>,</span><br><span class="line">              FieldFill.INSERT_UPDATE);</span><br><span class="line">      ArrayList&lt;TableFill&gt; tableFills = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">      tableFills.add(gmtCreate);</span><br><span class="line">      tableFills.add(gmtModified);</span><br><span class="line">      strategy.setTableFillList(tableFills);</span><br><span class="line">      <span class="comment">// 乐观锁</span></span><br><span class="line">      strategy.setVersionFieldName(<span class="string">&quot;version&quot;</span>);</span><br><span class="line">      strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">      strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">      mpg.setStrategy(strategy);</span><br><span class="line">      mpg.execute(); <span class="comment">//执行</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>测试查看效果</strong></p><p><img src="https://images.hckun.cn/img/52869354.png"></p><p>至此,Mybatis-Plus的基本使用如上,更多使用请参考官网API文档:<a href="https://mp.baomidou.com/guide/">https://mp.baomidou.com/guide/</a></p><blockquote><center>Mybatis-Plus更新完毕</center></blockquote></li></ul><p><img src="https://images.hckun.cn/img/blog10.png"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot整合富文本编辑器Editor</title>
      <link href="/post/8dc18bb0.html"/>
      <url>/post/8dc18bb0.html</url>
      
        <content type="html"><![CDATA[<p>本文参考:<a href="https://blog.csdn.net/weixin_43591980/">兴趣使然の草帽路飞</a></p><h2 id="1、什么是富文本编辑器"><a href="#1、什么是富文本编辑器" class="headerlink" title="1、什么是富文本编辑器"></a>1、什么是富文本编辑器</h2><h3 id="1-1、概述"><a href="#1-1、概述" class="headerlink" title="1.1、概述"></a>1.1、概述</h3><p>​    富文本编辑器，Multi-function Text Editor, 简称 MTE, 它提供类似于 Microsoft Word 的编辑功能，容易被不会编写 HTML 的用户并需要设置各种文本格式的用户所喜爱。它的应用也越来越广泛。最先只有 IE 浏览器支持，其它浏览器相继跟进，在功能的丰富性来说，还是 IE 强些。虽然没有一个统一的标准，但对于最基本的功能，各浏览器提供的 API 基本一致，从而使编写一个跨浏览器的富文本编辑器成为可能。</p><h3 id="1-2、常用的几种富文本编辑器"><a href="#1-2、常用的几种富文本编辑器" class="headerlink" title="1.2、常用的几种富文本编辑器"></a>1.2、常用的几种富文本编辑器</h3><ul><li><p><strong>Kindeditor</strong></p><p>KindEditor历史也很长了，用户数也不少，国内某公司出品。免费开源。界面类似于office word，界面和功能中规中矩，文档齐全，使用还算方便。</p><p>　更多介绍及下载：<a href="http://kindeditor.net/demo.php">http://kindeditor.net/demo.php</a></p></li><li><p>bootstrap-wysiwyg</p><p>bootstrap-wysiwyg是基于Bootstrap的轻型、免费开源的富文本编辑器，界面简洁大方。使用需要先引入bootstrap。</p><p>　个人觉得bootstrap-wysiwyg这一长串像乱码一样的名字影响了它的推广和使用~ ~毕竟轻型使用环境还是很多的。</p><p>　更多介绍及下载：<a href="http://mindmup.github.io/bootstrap-wysiwyg/">http://mindmup.github.io/bootstrap-wysiwyg/</a></p></li><li><p><strong>Editor</strong></p><p>Editor.md 是一款开源的、可嵌入的 Markdown 在线编辑器（组件），基于 CodeMirror、jQuery 和 Marked 构建。</p><p>​    官网地址：<a href="https://pandao.github.io/editor.md/">https://pandao.github.io/editor.md/</a></p><p>​    下载地址：<a href="https://pandao.github.io/editor.md/">https://pandao.github.io/editor.md/</a></p><p>这里我们使用的是Editor富文本编辑器，需要提前去官网进行下载。</p><p><img src="http://images.hckun.cn/img/4678953689.png"></p></li></ul><h2 id="2、实际应用"><a href="#2、实际应用" class="headerlink" title="2、实际应用"></a>2、实际应用</h2><h3 id="2-1、环境搭建"><a href="#2-1、环境搭建" class="headerlink" title="2.1、环境搭建"></a>2.1、环境搭建</h3><ol><li><p><strong>数据库表</strong></p><p>我们创建一张简单的数据表,字段有主键、作者、标题、内容，用来存储文章信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `article`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `article`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `author` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` longtext <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) </span><br></pre></td></tr></table></figure></li><li><p><strong>使用ide快速创建一个springboot项目，导入先关依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.73<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>dao我们只写我们需要的接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ArticleDao</span> &#123;</span><br><span class="line">    <span class="comment">//添加文章</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addArticle</span><span class="params">(Article article)</span>;</span><br><span class="line">    <span class="comment">//根据id查询文章</span></span><br><span class="line">    Article <span class="title function_">getArticle</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>mapper文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.dao.ArticleDao&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getArticle&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.pojo.Article&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from article</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addArticle&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.example.pojo.Article&quot;</span>&gt;</span></span><br><span class="line">        insert into article (author, title, content)</span><br><span class="line">        values (#&#123;author&#125;, #&#123;title&#125;, #&#123;content&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>application.properties配置文件</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#端口号</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br><span class="line"><span class="comment">#数据源</span></span><br><span class="line"><span class="attr">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="comment">#连接mysql配置,此处为mysql8.0</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/demo?useSSL=false&amp;serverTimezone=GMT%2B8&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="comment">#mapper文件位置</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:/cn/example/mapper/*.xml</span></span><br><span class="line"><span class="comment">#标准日志输出</span></span><br><span class="line"><span class="attr">mybatis.configuration.log-impl</span>=<span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="2-2、集成富文本"><a href="#2-2、集成富文本" class="headerlink" title="2.2、集成富文本"></a>2.2、集成富文本</h3><ol><li><p>将jquery和下载的Editor导入到static目录中</p></li><li><p>在templates目录中创建一个editor.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>富文本编辑页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--editormd.css--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/editor/css/editormd.css&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--为网页引入图标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.hckun.cn/images/me.jpg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--构建页面静态元素,标题、作者、文本域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--博客表单--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;mdEditorForm&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    标题：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    作者：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;article-content&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引入jquery、editormd.js--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/editormd.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//创建富文本框</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> testEditor;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//参数一:绑定给隐藏的文本域,参数二富文本的配置</span></span></span><br><span class="line"><span class="language-javascript">        testEditor = <span class="title function_">editormd</span>(<span class="string">&quot;article-content&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">width</span>: <span class="string">&quot;95%&quot;</span>,<span class="comment">//宽</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">height</span>: <span class="number">600</span>,<span class="comment">//高</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">syncScrolling</span>: <span class="string">&quot;single&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">path</span>: <span class="string">&quot;../editor/lib/&quot;</span>,<span class="comment">//加载编辑器lib路径</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">saveHTMLToTextarea</span>: <span class="literal">true</span>,    <span class="comment">// 保存 HTML 到 Textarea</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">emoji</span>: <span class="literal">true</span>,<span class="comment">//功能开启表情</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">theme</span>: <span class="string">&quot;dark&quot;</span>,<span class="comment">//工具栏主题</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">previewTheme</span>: <span class="string">&quot;white&quot;</span>,<span class="comment">//预览主题</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">editorTheme</span>: <span class="string">&quot;white&quot;</span>,<span class="comment">//编辑主题</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">tex</span>: <span class="literal">true</span>,                   <span class="comment">// 开启科学公式TeX语言支持，默认关闭</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">flowChart</span>: <span class="literal">true</span>,             <span class="comment">// 开启流程图支持，默认关闭</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">sequenceDiagram</span>: <span class="literal">true</span>,       <span class="comment">// 开启时序/序列图支持，默认关闭,</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//图片上传</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">imageUpload</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">imageFormats</span>: [<span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;gif&quot;</span>, <span class="string">&quot;png&quot;</span>, <span class="string">&quot;bmp&quot;</span>, <span class="string">&quot;webp&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">imageUploadURL</span>: <span class="string">&quot;/article/upload&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">onload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;onload&#x27;</span>, <span class="variable language_">this</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*指定需要显示的功能按钮*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbarIcons</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> [<span class="string">&quot;undo&quot;</span>, <span class="string">&quot;redo&quot;</span>, <span class="string">&quot;|&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;bold&quot;</span>, <span class="string">&quot;del&quot;</span>, <span class="string">&quot;italic&quot;</span>, <span class="string">&quot;quote&quot;</span>, <span class="string">&quot;ucwords&quot;</span>, <span class="string">&quot;uppercase&quot;</span>, <span class="string">&quot;lowercase&quot;</span>, <span class="string">&quot;|&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;h1&quot;</span>, <span class="string">&quot;h2&quot;</span>, <span class="string">&quot;h3&quot;</span>, <span class="string">&quot;h4&quot;</span>, <span class="string">&quot;h5&quot;</span>, <span class="string">&quot;h6&quot;</span>, <span class="string">&quot;|&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;list-ul&quot;</span>, <span class="string">&quot;list-ol&quot;</span>, <span class="string">&quot;hr&quot;</span>, <span class="string">&quot;|&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;link&quot;</span>, <span class="string">&quot;reference-link&quot;</span>, <span class="string">&quot;image&quot;</span>, <span class="string">&quot;code&quot;</span>, <span class="string">&quot;preformatted-text&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;code-block&quot;</span>, <span class="string">&quot;table&quot;</span>, <span class="string">&quot;datetime&quot;</span>, <span class="string">&quot;emoji&quot;</span>, <span class="string">&quot;html-entities&quot;</span>, <span class="string">&quot;pagebreak&quot;</span>, <span class="string">&quot;|&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;goto-line&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;preview&quot;</span>, <span class="string">&quot;fullscreen&quot;</span>, <span class="string">&quot;clear&quot;</span>, <span class="string">&quot;search&quot;</span>, <span class="string">&quot;|&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="string">&quot;help&quot;</span>, <span class="string">&quot;info&quot;</span>, <span class="string">&quot;releaseIcon&quot;</span>, <span class="string">&quot;index&quot;</span>]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*自定义功能按钮，下面我自定义了2个，一个是发布，一个是返回首页*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbarIconTexts</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">releaseIcon</span>: <span class="string">&quot;&lt;span bgcolor=\&quot;gray\&quot;&gt;发布&lt;/span&gt;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">index</span>: <span class="string">&quot;&lt;span bgcolor=\&quot;red\&quot;&gt;返回首页&lt;/span&gt;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*给自定义按钮指定回调函数*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbarHandlers</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                releaseIcon : <span class="keyword">function</span>(<span class="params">cm, icon, cursor, selection</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//表单提交</span></span></span><br><span class="line"><span class="language-javascript">                    mdEditorForm.<span class="property">method</span> = <span class="string">&quot;post&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    mdEditorForm.<span class="property">action</span> = <span class="string">&quot;/article/addArticle&quot;</span>;<span class="comment">//提交至服务器的路径</span></span></span><br><span class="line"><span class="language-javascript">                    mdEditorForm.<span class="title function_">submit</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                index : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&#x27;/&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写一个控制器,跳转到此页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/article&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArticleController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ArticleDao articleDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toEditor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;editor&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>浏览器访问</p><p><img src="http://images.hckun.cn/img/8758573.png"></p></li></ol><h3 id="2-3、添加文章"><a href="#2-3、添加文章" class="headerlink" title="2.3、添加文章"></a>2.3、添加文章</h3><ol><li><p>开发添加文章controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/addArticle&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">addArticle</span><span class="params">(Article article)</span> &#123;</span><br><span class="line">       System.out.println(article);</span><br><span class="line">       articleDao.addArticle(article);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;editor&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>测试添加文章,数据成功的进入数据库</p></li></ol><h3 id="2-4、查询文章"><a href="#2-4、查询文章" class="headerlink" title="2.4、查询文章"></a>2.4、查询文章</h3><ol><li><p>创建文章展示页面main.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文章头部信息：标题，作者，最后更新日期，导航--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;margin: auto 0&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.title&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    作者：<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;float: left&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.author&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文章主体内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;doc-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">style</span>=<span class="string">&quot;display:none;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;markdown&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;article.content&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/editor/css/editormd.preview.css&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/marked.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/prettify.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/raphael.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/underscore.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/sequence-diagram.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/flowchart.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/lib/jquery.flowchart.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/editor/editormd.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> testEditor;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        testEditor = editormd.<span class="title function_">markdownToHTML</span>(<span class="string">&quot;doc-content&quot;</span>, &#123;<span class="comment">//注意：这里是上面DIV的id</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">htmlDecode</span>: <span class="string">&quot;style,script,iframe&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">emoji</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">taskList</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">tocm</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">tex</span>: <span class="literal">true</span>, <span class="comment">// 默认不解析</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">flowChart</span>: <span class="literal">true</span>, <span class="comment">// 默认不解析</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">sequenceDiagram</span>: <span class="literal">true</span>, <span class="comment">// 默认不解析</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">codeFold</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;);&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>开发查询文章接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/getArticle/&#123;id&#125;&quot;)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">toMain</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id, Model model)</span> &#123;</span><br><span class="line">       <span class="type">Article</span> <span class="variable">article</span> <span class="operator">=</span> articleDao.getArticle(id);</span><br><span class="line">       model.addAttribute(<span class="string">&quot;article&quot;</span>, article);</span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;main&quot;</span>;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>测试查看文章展示效果</p><p><img src="http://images.hckun.cn/img/85728763586.png"></p></li></ol><h3 id="2-5、图片上传"><a href="#2-5、图片上传" class="headerlink" title="2.5、图片上传"></a>2.5、图片上传</h3><ol><li><p>editor.html中增加配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片上传</span></span><br><span class="line">        <span class="attr">imageUpload</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">imageFormats</span>: [<span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;jpeg&quot;</span>, <span class="string">&quot;gif&quot;</span>, <span class="string">&quot;png&quot;</span>, <span class="string">&quot;bmp&quot;</span>, <span class="string">&quot;webp&quot;</span>],</span><br><span class="line">        <span class="attr">imageUploadURL</span>: <span class="string">&quot;/article/upload&quot;</span>,</span><br><span class="line">        <span class="attr">onload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;onload&#x27;</span>, <span class="variable language_">this</span>);</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure></li><li><p>开发文件上传接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/upload&quot;)</span></span><br><span class="line">  <span class="meta">@ResponseBody</span></span><br><span class="line">  <span class="keyword">public</span> JSONObject <span class="title function_">fileUpload</span><span class="params">(<span class="meta">@RequestParam(value = &quot;editormd-image-file&quot;, required = true)</span> MultipartFile file, HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">      <span class="comment">//附件在项目中的上传路径</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> ResourceUtils.getURL(<span class="string">&quot;classpath:&quot;</span>).getPath() + <span class="string">&quot;static/files/&quot;</span>;</span><br><span class="line">      <span class="comment">//按月对文件进行存储</span></span><br><span class="line">      <span class="type">Calendar</span> <span class="variable">calendar</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">      <span class="type">String</span> <span class="variable">month</span> <span class="operator">=</span> (calendar.get(Calendar.MONTH) + <span class="number">1</span>) + <span class="string">&quot;月&quot;</span>;</span><br><span class="line">      <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> path + month;</span><br><span class="line">      <span class="comment">//完整的附件路径</span></span><br><span class="line">      <span class="type">File</span> <span class="variable">projectPath</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(filePath);</span><br><span class="line">      <span class="comment">//文件不存在创建</span></span><br><span class="line">      <span class="keyword">if</span> (!projectPath.exists()) &#123;</span><br><span class="line">          <span class="comment">//此时创建的目录在我们的resource中是找不到的,文件在编译之后的target目录中</span></span><br><span class="line">          System.out.println(<span class="string">&quot;创建目录上传路径为:&quot;</span> + filePath);</span><br><span class="line">          projectPath.mkdirs();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//给文件重命名</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">newFileName</span> <span class="operator">=</span> UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>) + file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">      <span class="comment">//上传</span></span><br><span class="line">      file.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(filePath + <span class="string">&quot;/&quot;</span> + newFileName));</span><br><span class="line">      <span class="comment">//给editormd进行回调</span></span><br><span class="line">      <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">      jsonObject.put(<span class="string">&quot;url&quot;</span>,<span class="string">&quot;/files/&quot;</span>+month+<span class="string">&quot;/&quot;</span>+newFileName);</span><br><span class="line">      jsonObject.put(<span class="string">&quot;success&quot;</span>,<span class="number">1</span>);</span><br><span class="line">      jsonObject.put(<span class="string">&quot;message&quot;</span>,<span class="string">&quot;文件上传成功&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> jsonObject;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>测试文件上传及回显效果</p><p>路径成功的回显</p><p><img src="http://images.hckun.cn/img/578685.png"></p><pre><code>文件也已经保存在服务端</code></pre></li></ol><p>​        <img src="http://images.hckun.cn/img/89653368935.png"></p><p>​        图片成功回显在文本框中</p><p>​        <img src="http://images.hckun.cn/img/586358935.png"></p><p>​    <strong>完美集成,可以开心的写文章了</strong></p><blockquote><center>SpringBoot整合富文本编辑器Editor.md完结</center></blockquote>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件集成 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
